{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardContainer.jsx\";\nimport React, { Component } from 'react';\nimport ACard from './ACard';\nimport './CardContainer.css';\nvar lastSrollTime = 0;\nvar currentDeltaY = undefined; // isScrollDirestionUp 0 is no scroll, 1 is scroll up, -1 is scroll down\n\nvar isScrollDirestionUp = 0;\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardContainer, _Component);\n\n  function CardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardContainer).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.preventScroll();\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.componentWillUnmount = function () {};\n\n    _this.preventScroll = function () {\n      var containerClass = _assertThisInitialized(_assertThisInitialized(_this));\n\n      window.addEventListener('wheel', function (event) {\n        event.preventDefault();\n        containerClass.stablizeScroll(event);\n      });\n    };\n\n    _this.stablizeScroll = function (event) {\n      var timeNow = new Date().getTime();\n      var enableScrolling = Boolean(timeNow - lastSrollTime < _this.state.quietPeriod + _this.state.animationTime);\n\n      if (!enableScrolling) {\n        currentDeltaY = event.deltaY;\n        lastSrollTime = timeNow;\n\n        _this.onStableScroll();\n      }\n    };\n\n    _this.onStableScroll = function () {\n      isScrollDirestionUp = _this.getIsDirectionUp();\n      console.log(isScrollDirestionUp);\n\n      _this.moveNextLocation(isScrollDirestionUp);\n\n      _this.rawMove(isScrollDirestionUp);\n    };\n\n    _this.getIsDirectionUp = function () {\n      return currentDeltaY !== 0 ? currentDeltaY < 0 ? 1 : -1 : 0;\n    };\n\n    _this.rawMove = function (isUp) {\n      _this.setState({\n        transformY: _this.state.transformY + _this.props.getBCardOuterHeight * isUp\n      });\n\n      console.log(isUp === 0 ? '(raw move) no move' : isUp < 0 ? 'raw move up' : 'raw move down');\n    };\n\n    _this.getCurrentLocation = function () {\n      return _this.state.currentLocation;\n    };\n\n    _this.moveNextLocation = function (isUp) {\n      var isDown = isUp * -1;\n\n      var current = _this.getCurrentLocation();\n\n      console.log('current: ' + [current[0], current[1]]); // 假設的位置\n      // let assumedNextB = this.getNextBCardLocation(current,isUp)\n      // this.setState({currentLocation:assumedNext},()=>{console.log('location updated: ' + this.state.currentLocation)})\n      // 確認假設位置是否存在\n      // 確認上/下一張B卡存在\n\n      if (_this.isLocationExists([current[0], current[1] + isDown])) {\n        // 上/下一張B卡存在 \n        _this.setState({\n          currentLocation: [current[0], current[1] + isDown, current[2]]\n        }); // 上/下一張B卡不存在，確認往上或往下\n\n      } else if (isUp === 1 && _this.isLocationExists([current[0] + isDown, 0])) {\n        // 上一張B卡不存在，若往上且上一A張卡存在，切上一張A卡並移到最後一張B卡\n        console.log('isUp: ' + isUp);\n        console.log([current[0] + isDown, _this.props.getCardLocationList[current[0] + isDown].length - 1]);\n\n        _this.setState({\n          currentLocation: [current[0] + isDown, current[0].length - 1]\n        });\n      } else if (isUp === -1 || _this.isLocationExists([current[0] + isDown, 0])) {\n        console.log('isUp: ' + isUp); // 下一張B卡不存在，若往下且下一A張卡存在，切下一張A卡並移到第0張B卡\n\n        console.log([current[0] + isDown, current[0].length - 1]);\n\n        _this.setState({\n          currentLocation: [current[0] + isDown, 0]\n        });\n      } else {\n        // 上/下一張B卡不存在，上/下一A張卡不存在\n        console.log('end!');\n      } // let nextType = this.getNextType(current,assumedNext)\n      // let actualNextLocation\n      // console.log(nextType)    \n      // switch (nextType) {\n      //   case 'switch B-Card':\n      //     actualNextLocation = this.getNextBCardLocation(current,isUp)\n      //     break;\n      //   case 'switch A-Card':\n      //     actualNextLocation = this.getNextACardLocation(current,isUp)\n      //     break;  \n      //   case 'reach end':\n      //   actualNextLocation = current\n      //   break;  \n      //   default:\n      //     throw new Error('new card location not exists!')\n      // }\n      // 以正確的位置執行\n      // this.setState({currentLocation:actualNextLocation})\n      // console.log(actualNextLocation)\n\n    };\n\n    _this.isLocationExists = function (assumedNext) {\n      try {\n        if (_this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] === undefined) {\n          console.log([assumedNext[0], assumedNext[1]] + 'not exists! '); // not exists\n\n          return false;\n        } else if (_this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] !== undefined) {\n          console.log([assumedNext[0], assumedNext[1]] + 'exists! '); // exists\n\n          return true;\n        } else {\n          throw new Error('isExists has an exception');\n        }\n      } catch (error) {\n        throw new Error(\"isExists: there's no \" + [assumedNext[0], assumedNext[1]] + \"(you may reach the end!)\");\n      }\n    };\n\n    _this.refHandler = function (element) {\n      _this.containerElement = element;\n\n      _this.props.refHandler();\n    };\n\n    _this.state = {\n      transformY: 0,\n      animationTime: 1200,\n      quietPeriod: 0,\n      currentLocation: [0, 0, 0]\n    };\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        transform: \"translate3d(0px,\" + this.state.transformY + \"vh,0px)\"\n      };\n      return React.createElement(\"div\", {\n        id: \"card-container\",\n        style: style,\n        ref: this.refHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, this.props.cardListData.map(function (aCardItem, aCardIndex, listArray) {\n        return React.createElement(ACard, {\n          key: aCardIndex,\n          child: aCardItem.ACardChild,\n          style: aCardItem.ACardAttr.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CardContainer;\n}(Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardContainer.jsx"],"names":["React","Component","ACard","lastSrollTime","currentDeltaY","undefined","isScrollDirestionUp","CardContainer","props","componentWillMount","preventScroll","componentDidMount","componentWillUnmount","containerClass","window","addEventListener","event","preventDefault","stablizeScroll","timeNow","Date","getTime","enableScrolling","Boolean","state","quietPeriod","animationTime","deltaY","onStableScroll","getIsDirectionUp","console","log","moveNextLocation","rawMove","isUp","setState","transformY","getBCardOuterHeight","getCurrentLocation","currentLocation","isDown","current","isLocationExists","getCardLocationList","length","assumedNext","Error","error","refHandler","element","containerElement","style","transform","cardListData","map","aCardItem","aCardIndex","listArray","ACardChild","ACardAttr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ACard from './ACard'\nimport './CardContainer.css'\n\nlet lastSrollTime = 0\nlet currentDeltaY = undefined\n// isScrollDirestionUp 0 is no scroll, 1 is scroll up, -1 is scroll down\nlet isScrollDirestionUp = 0\n\nclass CardContainer extends Component {\n\n  componentWillMount = () => {\n    this.preventScroll()\n  }\n\n  componentDidMount = () => {\n  }\n\n  componentWillUnmount = () => {\n  }\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      transformY:0,\n      animationTime:1200,\n      quietPeriod:0,\n      currentLocation:[0,0,0]\n    }\n  }\n\n  preventScroll = () => {\n    let containerClass = this\n    window.addEventListener('wheel',function(event) {\n      event.preventDefault()\n      containerClass.stablizeScroll(event)\n    })\n  }\n\n  stablizeScroll = (event) => {\n    let timeNow = new Date().getTime();\n    let enableScrolling = Boolean(timeNow - lastSrollTime < (this.state.quietPeriod + this.state.animationTime));\n    if(!enableScrolling) {\n      currentDeltaY = event.deltaY\n      lastSrollTime = timeNow\n      this.onStableScroll()\n    }\n  }\n\n  onStableScroll = () => {\n    isScrollDirestionUp = this.getIsDirectionUp()\n    console.log(isScrollDirestionUp)\n    this.moveNextLocation(isScrollDirestionUp)\n    this.rawMove(isScrollDirestionUp)\n  } \n\n  getIsDirectionUp = () => {\n    return (currentDeltaY !== 0)? ( (currentDeltaY < 0)? 1 : -1 ) : 0\n  }\n\n  rawMove = (isUp) => {\n    this.setState({transformY: this.state.transformY + (this.props.getBCardOuterHeight * isUp)})\n    console.log(((isUp === 0)? '(raw move) no move' : (isUp < 0)? 'raw move up' : 'raw move down'));\n  }\n\n  getCurrentLocation = () => {\n    return this.state.currentLocation\n  }\n\n  moveNextLocation = (isUp) => {\n    let isDown = isUp * -1\n    let current = this.getCurrentLocation()\n    console.log('current: ' + [current[0],current[1]]);\n    \n    // 假設的位置\n    // let assumedNextB = this.getNextBCardLocation(current,isUp)\n    // this.setState({currentLocation:assumedNext},()=>{console.log('location updated: ' + this.state.currentLocation)})\n    // 確認假設位置是否存在\n\n    // 確認上/下一張B卡存在\n    if (this.isLocationExists([current[0],(current[1] + isDown)])) {\n      // 上/下一張B卡存在 \n      this.setState({currentLocation:[current[0],(current[1] + isDown),current[2]]})\n      // 上/下一張B卡不存在，確認往上或往下\n    } else if (isUp === 1 && this.isLocationExists([(current[0] + isDown),0])) {\n      // 上一張B卡不存在，若往上且上一A張卡存在，切上一張A卡並移到最後一張B卡\n      console.log('isUp: ' + isUp)      \n      console.log([(current[0] + isDown),(this.props.getCardLocationList[current[0]+isDown].length-1)])\n      this.setState({currentLocation:[(current[0] + isDown),(current[0].length-1)]})\n    } else if (isUp === -1 || this.isLocationExists([(current[0] + isDown),0])) {\n      console.log('isUp: ' + isUp)    \n      // 下一張B卡不存在，若往下且下一A張卡存在，切下一張A卡並移到第0張B卡\n      console.log([(current[0] + isDown),(current[0].length-1)])\n      this.setState({currentLocation:[(current[0] + isDown),0]})\n    } else {\n      // 上/下一張B卡不存在，上/下一A張卡不存在\n      console.log('end!')      \n    }\n\n    // let nextType = this.getNextType(current,assumedNext)\n    // let actualNextLocation\n    // console.log(nextType)    \n    // switch (nextType) {\n    //   case 'switch B-Card':\n    //     actualNextLocation = this.getNextBCardLocation(current,isUp)\n    //     break;\n    //   case 'switch A-Card':\n    //     actualNextLocation = this.getNextACardLocation(current,isUp)\n    //     break;  \n    //   case 'reach end':\n    //   actualNextLocation = current\n    //   break;  \n    //   default:\n    //     throw new Error('new card location not exists!')\n    // }\n\n    // 以正確的位置執行\n    // this.setState({currentLocation:actualNextLocation})\n    // console.log(actualNextLocation)\n    \n  }\n\n  isLocationExists = (assumedNext) => {\n    try {\n      if (this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] === undefined) {\n        console.log([assumedNext[0],assumedNext[1]] + 'not exists! ')        \n        // not exists\n        return false\n      } else if  (this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] !== undefined) {\n        console.log([assumedNext[0],assumedNext[1]] + 'exists! ')\n        // exists\n        return true\n      } else {\n        throw new Error('isExists has an exception')\n      }\n    } catch (error) {\n        throw new Error(\"isExists: there's no \" + [assumedNext[0],assumedNext[1]] + \"(you may reach the end!)\")\n    }\n  }\n\n  // setNextBCardLocationInNextACard = (current,isUp) => {\n  //   if (isUp === -1) {\n  //     console.log(0)\n  //     return 0\n  //   } else if (isUp === 1) {\n  //     console.log(this.props.getCardLocationList[current[0]].length)\n  //     console.log(this.props.getCardLocationList[current[0]])\n  //     return current[0].length\n  //   } else {\n  //     throw new Error(\"It dosen't move!\")\n  //   }\n  // }\n\n\n\n  // getNextBCardLocation = (currentLocation,isUp) => {\n  //   let newLocation = [currentLocation[0], currentLocation[1] + (1 * -isUp), currentLocation[2]]\n  //   return newLocation\n  // }\n\n  // getNextACardLocation = (currentLocation,isUp) => {\n  //   let checkLastOfFirst = (isUp) => {\n  //     console.log(isUp)      \n  //     if (isUp === -1) {\n  //       console.log(0)\n  //       return 0\n  //     } else if (isUp === 1) {\n  //       console.log(this.props.getCardLocationList[currentLocation[0]].length)\n  //       console.log(this.props.getCardLocationList[currentLocation[0]])\n  //       return currentLocation[0].length\n  //     } else {\n  //       throw new Error(\"It dosen't move!\")\n  //     }\n  //   }\n  //   let newLocation = [currentLocation[0] + (1 * -isUp), checkLastOfFirst(isUp), currentLocation[2]]\n  //   return newLocation\n  // }\n\n  // getNextType = (current,assumedNext) => {\n  //   console.log('準備中' + this.props.getCardLocationList);\n  //   console.log('準備中' + assumedNext[0],assumedNext[1],assumedNext[2]);\n\n  //   // check type\n  //   console.log('A卡：'+this.props.getCardLocationList + \"的第 \" + assumedNext[0]);\n  //   if (this.props.getCardLocationList[assumedNext[0]] === undefined) {\n  //     // A頂\n  //     try {\n  //       if (this.props.getCardLocationList[current[0]][assumedNext[1]] !== undefined) {\n  //         // A頂B不頂 - 最後一張A-card\n  //         console.log(`滑之前: ${current}, 假設的下一張： ${current[0]} ,${assumedNext[1]} A到頂B不到頂`) \n  //         return 'switch B-Card'\n  //       } else if (this.props.getCardLocationList[current[0]][assumedNext[1]] === undefined) {\n  //         // A頂B也頂 - 地底了\n  //         console.log(`滑之前: ${current}, 假設的下一張： ${current[0]} ,${assumedNext[1]} 到底了`)   \n  //         return 'reach end'\n  //       }\n  //     } catch (error) {\n  //       // A頂到不知道去那裡 - 不該存在\n  //       console.log(`滑之前: ${current}, 已經滑到: ${assumedNext} 到底了`)       \n  //       return 'reach end'\n  //     }\n      \n  //   } else  {\n  //     // A不頂\n  //     if (this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] === undefined) {\n  //       // A不頂B頂 - 換A卡\n  //       console.log(`滑之前: ${current}, 假設的下一張： ${assumedNext[0]}, ${assumedNext[1]}換A`) \n  //       if (this.props.getCardLocationList[assumedNext[0]][assumedNext[1]]) {\n          \n  //       }\n  //       return 'switch A-Card'\n  //     } else {\n  //       // A不頂B不頂 - 換B卡\n  //       console.log(`滑之前: ${current}, 假設的下一張： ${assumedNext[0]}, ${assumedNext[1]}換B`) \n  //       return 'switch B-Card'\n  //     }\n  //   }\n  // }\n\n  refHandler = (element) => {\n    this.containerElement = element\n    this.props.refHandler()\n  }\n\n\n  render() {\n    let style = {transform:\"translate3d(0px,\" + this.state.transformY + \"vh,0px)\"} \n    return (\n    <div id=\"card-container\" style={style} ref={this.refHandler}>\n      {    \n        this.props.cardListData.map((aCardItem,aCardIndex,listArray)=>{\n          return <ACard key={aCardIndex} child={aCardItem.ACardChild} style={aCardItem.ACardAttr.style}></ACard>\n        })\n      }\n    </div>\n    \n    )\n  }\n\n}\n\nexport default CardContainer;"]},"metadata":{},"sourceType":"module"}