{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/HelloWorld.jsx\";\nimport React, { Component } from 'react';\n\nvar HelloWorld =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HelloWorld, _Component);\n\n  function HelloWorld() {\n    _classCallCheck(this, HelloWorld);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HelloWorld).apply(this, arguments));\n  }\n\n  _createClass(HelloWorld, [{\n    key: \"render\",\n    value: function render() {\n      // 運用陣列的資料建立很多標籤\n      var toDo = [{\n        id: 'number1',\n        text: 'im todo1',\n        key: 'key1'\n      }, {\n        id: 'number2',\n        text: 'todo2',\n        key: 'key2'\n      }, {\n        id: 'number3',\n        text: 'todododo3',\n        key: 'key3'\n      }];\n      var todoList = toDo.map(function (toDoItem) {\n        return React.createElement(\"li\", {\n          id: toDoItem.id,\n          key: toDoItem.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, toDoItem.text);\n      });\n\n      var aFunction = function aFunction() {\n        return 'text from function';\n      };\n\n      var aArray = ['hi!', 'oh ya!'];\n      var one = 1; // return 一個fragment的片段\n      // const Fragment = React.Fragment\n      // return (\n      //   <Fragment>\n      //     'some text'\n      //     <div>123</div>\n      //     <button>button</button>\n      //   </Fragment>\n      // )\n      // 花括號表達樣式\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: 123 + 456,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: {\n          name: 'a Object',\n          age: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"red color\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, toDo[0].id), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, aArray), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, aFunction()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, aArray[0] === 'Hiii' ? 'Meow' : 'Bow'), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, one += 1), React.createElement(\"div\", {\n        is: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return alert('Thank you!');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Click Me!\"), todoList);\n    }\n  }]);\n\n  return HelloWorld;\n}(Component);\n\nexport default HelloWorld;","map":{"version":3,"sources":["/Users/umas/my-app/src/HelloWorld.jsx"],"names":["React","Component","HelloWorld","toDo","id","text","key","todoList","map","toDoItem","aFunction","aArray","one","name","age","color","alert"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,U;;;;;;;;;;;;;6BAIK;AAEP;AAEA,UAAMC,IAAI,GAAG,CAAC;AAACC,QAAAA,EAAE,EAAC,SAAJ;AAAcC,QAAAA,IAAI,EAAC,UAAnB;AAA8BC,QAAAA,GAAG,EAAC;AAAlC,OAAD,EAA2C;AAACF,QAAAA,EAAE,EAAC,SAAJ;AAAcC,QAAAA,IAAI,EAAC,OAAnB;AAA2BC,QAAAA,GAAG,EAAC;AAA/B,OAA3C,EAAkF;AAACF,QAAAA,EAAE,EAAC,SAAJ;AAAcC,QAAAA,IAAI,EAAC,WAAnB;AAA+BC,QAAAA,GAAG,EAAC;AAAnC,OAAlF,CAAb;AACA,UAAMC,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAAS,UAACC,QAAD,EAAY;AACpC,eACE;AAAI,UAAA,EAAE,EAAEA,QAAQ,CAACL,EAAjB;AAAqB,UAAA,GAAG,EAAEK,QAAQ,CAACH,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyCG,QAAQ,CAACJ,IAAlD,CADF;AAGD,OAJgB,CAAjB;;AAMA,UAAMK,SAAS,GAAG,SAAZA,SAAY;AAAA,eAAK,oBAAL;AAAA,OAAlB;;AACA,UAAMC,MAAM,GAAG,CAAC,KAAD,EAAO,QAAP,CAAf;AACA,UAAIC,GAAG,GAAG,CAAV,CAbO,CAeP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAK,QAAA,KAAK,EAAE,MAAM,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAKE;AAAK,QAAA,KAAK,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAOE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAC,UAAN;AAAkBC,UAAAA,GAAG,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EASE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMZ,IAAI,CAAC,CAAD,CAAJ,CAAQC,EAAd,CAZF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMO,MAAN,CAhBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,SAAS,EAAf,CApBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,MAAM,CAAC,CAAD,CAAN,KAAc,MAAd,GAAsB,MAAtB,GAA+B,KAArC,CAxBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,GAAG,IAAE,CAAX,CA5BF,EA6BE;AAAK,QAAA,EAAE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,CADF;AAsCA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAII,KAAK,CAAC,YAAD,CAAT;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGT,QAFH,CADF;AAOD;;;;EA7EsBN,S;;AAgFzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass HelloWorld extends Component {\n\n  \n\n  render() {\n\n    // 運用陣列的資料建立很多標籤\n\n    const toDo = [{id:'number1',text:'im todo1',key:'key1'},{id:'number2',text:'todo2',key:'key2'},{id:'number3',text:'todododo3',key:'key3'}]\n    const todoList = toDo.map((toDoItem)=>{\n      return (\n        <li id={toDoItem.id} key={toDoItem.key}>{toDoItem.text}</li>\n      )\n    })\n\n    const aFunction = ()=> 'text from function'\n    const aArray = ['hi!','oh ya!']\n    let one = 1\n\n    // return 一個fragment的片段\n\n    // const Fragment = React.Fragment\n    // return (\n    //   <Fragment>\n    //     'some text'\n    //     <div>123</div>\n    //     <button>button</button>\n    //   </Fragment>\n    // )\n\n    // 花括號表達樣式\n\n    return (\n      <div>\n        {/* 值 */}\n\n        <div class={123 + 456}></div>\n\n        <div class={true}></div>\n\n        <div class={{name:'a Object', age: 12}}></div>\n\n        <div style={{color:'red'}}>red color</div>\n\n        {/* 常數 */}\n        <div>{toDo[0].id}</div>\n\n        {/* 陣列值 */}\n\n        <div>{aArray}</div>\n\n        {/* 函式 */}\n\n        <div>{aFunction()}</div>\n\n        {/* 三元判斷式 */}\n\n        <div>{aArray[0] === 'Hiii'? 'Meow' : 'Bow' }</div>\n\n        {/* 一些運算 */}\n\n        <div>{one+=1}</div>\n        <div is></div>\n\n        {/* 展開符 */}\n\n      </div>\n    )\n\n\n    return (\n      <div>\n        <button onClick={()=>alert('Thank you!')}>Click Me!</button>\n        {todoList}          \n      </div>\n    ) \n      \n  }\n}\n\nexport default HelloWorld;"]},"metadata":{},"sourceType":"module"}