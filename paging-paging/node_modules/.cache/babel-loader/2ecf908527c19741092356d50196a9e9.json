{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardContainer.jsx\";\nimport React, { Component } from 'react';\nimport ACard from './ACard';\nimport './CardContainer.css';\nvar lastSrollTime = 0;\nvar currentDeltaY = undefined; // isScrollDirestionUp 0 is no scroll, 1 is scroll up, -1 is scroll down\n\nvar isScrollDirestionUp = 0;\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardContainer, _Component);\n\n  function CardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardContainer).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.preventScroll();\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.componentWillUnmount = function () {};\n\n    _this.preventScroll = function () {\n      var containerClass = _assertThisInitialized(_assertThisInitialized(_this));\n\n      window.addEventListener('wheel', function (event) {\n        event.preventDefault();\n        containerClass.stablizeScroll(event);\n      });\n    };\n\n    _this.stablizeScroll = function (event) {\n      var timeNow = new Date().getTime();\n      var enableScrolling = Boolean(timeNow - lastSrollTime < _this.state.quietPeriod + _this.state.animationTime);\n\n      if (!enableScrolling) {\n        currentDeltaY = event.deltaY;\n        lastSrollTime = timeNow;\n\n        _this.onStableScroll();\n      }\n    };\n\n    _this.onStableScroll = function () {\n      isScrollDirestionUp = _this.getIsDirectionUp();\n      console.log(isScrollDirestionUp);\n\n      _this.moveNextLocation(isScrollDirestionUp);\n\n      _this.rawMove(isScrollDirestionUp);\n    };\n\n    _this.getIsDirectionUp = function () {\n      return currentDeltaY !== 0 ? currentDeltaY < 0 ? 1 : -1 : 0;\n    };\n\n    _this.rawMove = function (isUp) {\n      _this.setState({\n        transformY: _this.state.transformY + _this.props.getBCardOuterHeight * isUp\n      });\n\n      console.log(isUp === 0 ? '(raw move) no move' : isUp < 0 ? 'raw move up' : 'raw move down');\n    };\n\n    _this.getCurrentLocation = function () {\n      return _this.state.currentLocation;\n    };\n\n    _this.moveNextLocation = function (isUp) {\n      var current = _this.getCurrentLocation(); // 假設的位置\n\n\n      var assumedNext = _this.getNextBCardLocation(current, isUp); // this.setState({currentLocation:assumedNext},()=>{console.log('location updated: ' + this.state.currentLocation)})\n      // 確認假設的位置\n\n\n      var nextType = _this.getNextType(current, assumedNext);\n\n      var actualNextLocation;\n\n      switch (nextType) {\n        case 'switch B-Card':\n          actualNextLocation = _this.getNextBCardLocation(current, isUp);\n          break;\n\n        case 'switch A-Card':\n          actualNextLocation = _this.getNextACardLocation(current, isUp);\n          break;\n\n        case 'reach end':\n          actualNextLocation = current;\n          break;\n\n        default:\n          throw new Error('new card location not exists!');\n      } // 以正確的位置執行\n      // this.setState({currentLocation:actualNextLocation})\n\n\n      console.log(actualNextLocation);\n    };\n\n    _this.getNextBCardLocation = function (currentLocation, isUp) {\n      var newLocation = [currentLocation[0], currentLocation[1] + 1 * -isUp, currentLocation[2]];\n      return newLocation;\n    };\n\n    _this.getNextACardLocation = function (currentLocation, isUp) {\n      var checkLastOfFirst = function checkLastOfFirst(isUp) {\n        console.log(isUp);\n\n        if (isUp === -1) {\n          console.log(0);\n          return 0;\n        } else if (isUp === 1) {\n          console.log(_this.props.getCardLocationList[currentLocation[0]].length);\n          console.log(_this.props.getCardLocationList[currentLocation[0]]);\n          return currentLocation[0].length;\n        } else {\n          throw new Error(\"It dosen't move!\");\n        }\n      };\n\n      var newLocation = [currentLocation[0] + 1 * -isUp, checkLastOfFirst(isUp), currentLocation[2]];\n      return newLocation;\n    };\n\n    _this.getNextType = function (current, assumedNext) {\n      console.log('準備中' + _this.props.getCardLocationList);\n      console.log('準備中' + assumedNext[0], assumedNext[1], assumedNext[2]); // check type\n\n      if (_this.props.getCardLocationList[assumedNext[0]] === undefined) {\n        // A頂\n        try {\n          if (_this.props.getCardLocationList[current[0]][assumedNext[1]] !== undefined) {\n            // A頂B不頂 - 最後一張A-card\n            console.log(\"\\u6ED1\\u4E4B\\u524D: \".concat(current, \", \\u5047\\u8A2D\\u7684\\u4E0B\\u4E00\\u5F35\\uFF1A \").concat(assumedNext, \"A\\u5230\\u9802B\\u4E0D\\u5230\\u9802\"));\n            return 'switch B-Card';\n          } else if (_this.props.getCardLocationList[current[0]][assumedNext[1]] === undefined) {\n            // A頂B也頂 - 地底了\n            console.log(\"\\u6ED1\\u4E4B\\u524D: \".concat(current, \", \\u5DF2\\u7D93\\u6ED1\\u5230: \").concat(_this.props.getCardLocationList[current[0]][assumedNext[1]], \" \\u5230\\u5E95\\u4E86\"));\n            return 'reach end';\n          }\n        } catch (error) {// // A頂也B頂 - 到底了或不存在\n          // console.log(`滑之前: ${current}, 已經滑到: ${assumedNext} 到底了`)       \n          // return 'reach end'\n        }\n      } else {\n        // A不頂（其實可能頂了）\n        if (_this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] === undefined) {\n          // A不頂B頂 - 換A卡 (結果可能是他到底了)\n          console.log(\"\\u6ED1\\u4E4B\\u524D: \".concat(current, \", \\u5DF2\\u7D93\\u6ED1\\u5230: \").concat(assumedNext, \"\\u63DBA\"));\n          return 'switch A-Card';\n        } else {\n          // A不頂B不頂 - 換B卡\n          console.log(\"\\u6ED1\\u4E4B\\u524D: \".concat(current, \", \\u5DF2\\u7D93\\u6ED1\\u5230: \").concat(assumedNext, \"\\u63DBB\"));\n          return 'switch B-Card';\n        }\n      }\n    };\n\n    _this.refHandler = function (element) {\n      _this.containerElement = element;\n\n      _this.props.refHandler();\n    };\n\n    _this.state = {\n      transformY: 0,\n      animationTime: 1200,\n      quietPeriod: 0,\n      currentLocation: [0, 0, 0]\n    };\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        transform: \"translate3d(0px,\" + this.state.transformY + \"vh,0px)\"\n      };\n      return React.createElement(\"div\", {\n        id: \"card-container\",\n        style: style,\n        ref: this.refHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.props.cardListData.map(function (aCardItem, aCardIndex, listArray) {\n        return React.createElement(ACard, {\n          key: aCardIndex,\n          child: aCardItem.ACardChild,\n          style: aCardItem.ACardAttr.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CardContainer;\n}(Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardContainer.jsx"],"names":["React","Component","ACard","lastSrollTime","currentDeltaY","undefined","isScrollDirestionUp","CardContainer","props","componentWillMount","preventScroll","componentDidMount","componentWillUnmount","containerClass","window","addEventListener","event","preventDefault","stablizeScroll","timeNow","Date","getTime","enableScrolling","Boolean","state","quietPeriod","animationTime","deltaY","onStableScroll","getIsDirectionUp","console","log","moveNextLocation","rawMove","isUp","setState","transformY","getBCardOuterHeight","getCurrentLocation","currentLocation","current","assumedNext","getNextBCardLocation","nextType","getNextType","actualNextLocation","getNextACardLocation","Error","newLocation","checkLastOfFirst","getCardLocationList","length","error","refHandler","element","containerElement","style","transform","cardListData","map","aCardItem","aCardIndex","listArray","ACardChild","ACardAttr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ACard from './ACard'\nimport './CardContainer.css'\n\nlet lastSrollTime = 0\nlet currentDeltaY = undefined\n// isScrollDirestionUp 0 is no scroll, 1 is scroll up, -1 is scroll down\nlet isScrollDirestionUp = 0\n\nclass CardContainer extends Component {\n\n  componentWillMount = () => {\n    this.preventScroll()\n  }\n\n  componentDidMount = () => {\n  }\n\n  componentWillUnmount = () => {\n  }\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      transformY:0,\n      animationTime:1200,\n      quietPeriod:0,\n      currentLocation:[0,0,0]\n    }\n  }\n\n  preventScroll = () => {\n    let containerClass = this\n    window.addEventListener('wheel',function(event) {\n      event.preventDefault()\n      containerClass.stablizeScroll(event)\n    })\n  }\n\n  stablizeScroll = (event) => {\n    let timeNow = new Date().getTime();\n    let enableScrolling = Boolean(timeNow - lastSrollTime < (this.state.quietPeriod + this.state.animationTime));\n    if(!enableScrolling) {\n      currentDeltaY = event.deltaY\n      lastSrollTime = timeNow\n      this.onStableScroll()\n    }\n  }\n\n  onStableScroll = () => {\n    isScrollDirestionUp = this.getIsDirectionUp()\n    console.log(isScrollDirestionUp)\n    this.moveNextLocation(isScrollDirestionUp)\n    this.rawMove(isScrollDirestionUp)\n  } \n\n  getIsDirectionUp = () => {\n    return (currentDeltaY !== 0)? ( (currentDeltaY < 0)? 1 : -1 ) : 0\n  }\n\n  rawMove = (isUp) => {\n    this.setState({transformY: this.state.transformY + (this.props.getBCardOuterHeight * isUp)})\n    console.log(((isUp === 0)? '(raw move) no move' : (isUp < 0)? 'raw move up' : 'raw move down'));\n  }\n\n  getCurrentLocation = () => {\n    return this.state.currentLocation\n  }\n\n  moveNextLocation = (isUp) => {\n    let current = this.getCurrentLocation()\n    // 假設的位置\n    let assumedNext = this.getNextBCardLocation(current,isUp)\n    // this.setState({currentLocation:assumedNext},()=>{console.log('location updated: ' + this.state.currentLocation)})\n    // 確認假設的位置\n    let nextType = this.getNextType(current,assumedNext)\n    let actualNextLocation\n    switch (nextType) {\n      case 'switch B-Card':\n        actualNextLocation = this.getNextBCardLocation(current,isUp)\n        break;\n      case 'switch A-Card':\n        actualNextLocation = this.getNextACardLocation(current,isUp)\n        break;  \n      case 'reach end':\n      actualNextLocation = current\n      break;  \n      default:\n        throw new Error('new card location not exists!')\n    }\n\n    // 以正確的位置執行\n    // this.setState({currentLocation:actualNextLocation})\n    console.log(actualNextLocation)\n    \n  }\n\n  getNextBCardLocation = (currentLocation,isUp) => {\n    let newLocation = [currentLocation[0], currentLocation[1] + (1 * -isUp), currentLocation[2]]\n    return newLocation\n  }\n\n  getNextACardLocation = (currentLocation,isUp) => {\n    let checkLastOfFirst = (isUp) => {\n      console.log(isUp)      \n      if (isUp === -1) {\n        console.log(0)\n        return 0\n      } else if (isUp === 1) {\n        console.log(this.props.getCardLocationList[currentLocation[0]].length)\n        console.log(this.props.getCardLocationList[currentLocation[0]])\n        return currentLocation[0].length\n      } else {\n        throw new Error(\"It dosen't move!\")\n      }\n    }\n    let newLocation = [currentLocation[0] + (1 * -isUp), checkLastOfFirst(isUp), currentLocation[2]]\n    return newLocation\n  }\n\n  getNextType = (current,assumedNext) => {\n    console.log('準備中' + this.props.getCardLocationList);\n    console.log('準備中' + assumedNext[0],assumedNext[1],assumedNext[2]);\n\n    // check type\n\n    if (this.props.getCardLocationList[assumedNext[0]] === undefined) {\n      // A頂\n      try {\n        if (this.props.getCardLocationList[current[0]][assumedNext[1]] !== undefined) {\n          // A頂B不頂 - 最後一張A-card\n          console.log(`滑之前: ${current}, 假設的下一張： ${assumedNext}A到頂B不到頂`) \n          return 'switch B-Card'\n        } else if (this.props.getCardLocationList[current[0]][assumedNext[1]] === undefined) {\n          // A頂B也頂 - 地底了\n          console.log(`滑之前: ${current}, 已經滑到: ${this.props.getCardLocationList[current[0]][assumedNext[1]]} 到底了`)   \n          return 'reach end'\n        }\n      } catch (error) {\n        // // A頂也B頂 - 到底了或不存在\n        // console.log(`滑之前: ${current}, 已經滑到: ${assumedNext} 到底了`)       \n        // return 'reach end'\n      }\n      \n    } else  {\n      // A不頂（其實可能頂了）\n      if (this.props.getCardLocationList[assumedNext[0]][assumedNext[1]] === undefined) {\n        // A不頂B頂 - 換A卡 (結果可能是他到底了)\n        console.log(`滑之前: ${current}, 已經滑到: ${assumedNext}換A`) \n        return 'switch A-Card'\n      } else {\n        // A不頂B不頂 - 換B卡\n        console.log(`滑之前: ${current}, 已經滑到: ${assumedNext}換B`) \n        return 'switch B-Card'\n      }\n    }\n    \n    \n    \n    \n  }\n\n  refHandler = (element) => {\n    this.containerElement = element\n    this.props.refHandler()\n  }\n\n\n  render() {\n    let style = {transform:\"translate3d(0px,\" + this.state.transformY + \"vh,0px)\"} \n    return (\n    <div id=\"card-container\" style={style} ref={this.refHandler}>\n      {    \n        this.props.cardListData.map((aCardItem,aCardIndex,listArray)=>{\n          return <ACard key={aCardIndex} child={aCardItem.ACardChild} style={aCardItem.ACardAttr.style}></ACard>\n        })\n      }\n    </div>\n    \n    )\n  }\n\n}\n\nexport default CardContainer;"]},"metadata":{},"sourceType":"module"}