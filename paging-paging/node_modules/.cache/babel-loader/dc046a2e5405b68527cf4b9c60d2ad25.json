{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardApp.jsx\";\nimport React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport createRawCardDataList from './CreateRawCardDataList';\nimport convertToMobileCardDataList from './ConvertToMobileCardDataList';\nimport createCardLocationList from './CreateCardLocationList';\nvar appWidth;\n\nvar CardApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardApp, _Component);\n\n  function CardApp(props) {\n    var _this;\n\n    _classCallCheck(this, CardApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardApp).call(this, props));\n\n    _this.componentWillMount = function () {\n      window.addEventListener(\"resize\", _this.updateWidth);\n    };\n\n    _this.componentDidMount = function () {\n      _this.updateWidth();\n    };\n\n    _this.updateWidth = function () {\n      appWidth = document.getElementById('card-app').clientWidth;\n\n      _this.setState({\n        containerWidth: appWidth,\n        screenType: _this.getScreenType()\n      }, function () {\n        _this.createCardList();\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.createCardList = function () {\n      console.log(_this.state.screenType);\n\n      switch (_this.state.screenType) {\n        case 'mobile phone':\n          _this.adaptMobileScreen();\n\n          break;\n\n        case 'tablet':\n        case 'laptop':\n        case 'PC screens and bigger':\n          _this.adaptLaptopScreen();\n\n          break;\n\n        default:\n          throw new Error('Scree Type Error');\n      }\n    };\n\n    _this.adaptMobileScreen = function () {\n      _this.setState({\n        cardDataList: convertToMobileCardDataList(createRawCardDataList(_this.state.bCardOuterHeight))\n      }, _this.setCardLocationList);\n    };\n\n    _this.adaptLaptopScreen = function () {\n      _this.setState({\n        cardDataList: createRawCardDataList(_this.state.bCardOuterHeight)\n      }, _this.setCardLocationList);\n    };\n\n    _this.setCardLocationList = function () {\n      _this.setState({\n        cardLocationList: createCardLocationList(_this.state.cardDataList)\n      }, function () {\n        console.log(_this.state.cardLocationList);\n      });\n    };\n\n    _this.getScreenType = function () {\n      var width = _this.state.containerWidth;\n\n      if (width <= 480) {\n        console.log('mobile phone');\n        return 'mobile phone';\n      } else if (width <= 1024) {\n        console.log('tablet');\n        return 'tablet';\n      } else if (width <= 1600) {\n        console.log('laptop');\n        return 'laptop';\n      } else {\n        console.log('PC screens and bigger');\n        return 'PC screens and bigger';\n      }\n    };\n\n    _this.setContainerRef = function (element) {\n      _this.containerElement = element;\n    };\n\n    _this.cardListDataChangeHandler = function (ACardIndex, distance) {\n      var origionalCardDataList = _this.state.cardDataList;\n      origionalCardDataList[ACardIndex].ACardAttr = {\n        style: {\n          transform: 'translate3d(0px,' + _this.state.bCardOuterHeight * distance + 'vh,0px)'\n        }\n      };\n      console.log(origionalCardDataList[ACardIndex].ACardAttr); // origionalCardDataList[ACardIndex].ACardAttr.style.backgroundColor = \"#dd9999\"\n\n      _this.setState({\n        cardDataList: origionalCardDataList\n      }); // this.setState({})\n\n    };\n\n    _this.handleOnACardKeyPress = function () {};\n\n    _this.state = {\n      containerWidth: document.getElementById('card-app').clientWidth,\n      screenType: '',\n      cardDataList: [],\n      cardLocationList: [],\n      bCardOuterHeight: 100\n    };\n    return _this;\n  }\n\n  _createClass(CardApp, [{\n    key: \"render\",\n    value: function render() {\n      return [React.createElement(CardContainer, {\n        getCardLocationList: this.state.cardLocationList,\n        getBCardOuterHeight: this.state.bCardOuterHeight,\n        cardListData: this.state.cardDataList,\n        changeCardListData: this.cardListDataChangeHandler,\n        refHandler: this.setContainerRef,\n        screenType: this.state.screenType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: '50px',\n          width: '100%',\n          position: ' fixed',\n          top: '0px',\n          backgroundColor: 'cadetblue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          position: 'fixed',\n          zIndex: '100'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onclick: this.handleOnClick(),\n        id: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Go!\"), \"A-Card: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"onepage\",\n        onKeyPress: this.handleOnACardKeyPress(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), \"B-Card: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"subpage\",\n        onKeyPress: this.handleOnACardKeyPress(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))];\n    }\n  }]);\n\n  return CardApp;\n}(Component);\n\nexport default CardApp;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardApp.jsx"],"names":["React","Component","CardContainer","createRawCardDataList","convertToMobileCardDataList","createCardLocationList","appWidth","CardApp","props","componentWillMount","window","addEventListener","updateWidth","componentDidMount","document","getElementById","clientWidth","setState","containerWidth","screenType","getScreenType","createCardList","console","log","state","adaptMobileScreen","adaptLaptopScreen","Error","cardDataList","bCardOuterHeight","setCardLocationList","cardLocationList","width","setContainerRef","element","containerElement","cardListDataChangeHandler","ACardIndex","distance","origionalCardDataList","ACardAttr","style","transform","handleOnACardKeyPress","height","position","top","backgroundColor","zIndex","handleOnClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport createRawCardDataList from './CreateRawCardDataList';\nimport convertToMobileCardDataList from './ConvertToMobileCardDataList'\nimport createCardLocationList from './CreateCardLocationList'\n\nlet appWidth\n\nclass CardApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      containerWidth:document.getElementById('card-app').clientWidth,\n      screenType:'',\n      cardDataList:[],\n      cardLocationList:[],\n      bCardOuterHeight:100\n    }    \n  }\n\n  componentWillMount = () => {\n    window.addEventListener(\"resize\", this.updateWidth)\n  }  \n\n  componentDidMount = () => {\n    this.updateWidth()\n  }\n\n  updateWidth = () => {\n    appWidth = document.getElementById('card-app').clientWidth\n    this.setState({containerWidth:appWidth,screenType:this.getScreenType()},()=>{this.createCardList()})\n    console.log(this.state)\n  }\n\n  createCardList = () => {\n    console.log(this.state.screenType)\n    switch (this.state.screenType) {\n      case 'mobile phone':\n        this.adaptMobileScreen()\n        break;\n      case 'tablet':\n      case 'laptop':\n      case 'PC screens and bigger':\n        this.adaptLaptopScreen()\n        break;\n      default:\n        throw new Error('Scree Type Error')\n    }   \n  }\n\n  adaptMobileScreen = () => {\n    this.setState({cardDataList:convertToMobileCardDataList(createRawCardDataList(this.state.bCardOuterHeight))},this.setCardLocationList)    \n  }\n  \n\n  adaptLaptopScreen = () => {\n    this.setState({cardDataList:createRawCardDataList(this.state.bCardOuterHeight)},this.setCardLocationList)\n  }\n\n  setCardLocationList = () => {\n    this.setState({cardLocationList:createCardLocationList(this.state.cardDataList)},()=>{console.log(this.state.cardLocationList)})\n  }\n\n  getScreenType = () => {\n    let width = this.state.containerWidth\n    if (width <= 480) {\n      console.log('mobile phone')\n      return 'mobile phone'\n    } else if (width <= 1024) {\n      console.log('tablet')\n      return 'tablet'\n    } else if (width <=1600) {\n      console.log('laptop')\n      return 'laptop'\n    } else {\n      console.log('PC screens and bigger')\n      return 'PC screens and bigger'\n    }\n  }\n\n  setContainerRef = (element) => {\n    this.containerElement = element\n  }\n\n  cardListDataChangeHandler = (ACardIndex,distance) => {\n    let origionalCardDataList = this.state.cardDataList\n    origionalCardDataList[ACardIndex].ACardAttr = {style:{transform:'translate3d(0px,' + (this.state.bCardOuterHeight * distance) +'vh,0px)'}}\n    console.log(origionalCardDataList[ACardIndex].ACardAttr);\n    // origionalCardDataList[ACardIndex].ACardAttr.style.backgroundColor = \"#dd9999\"\n    this.setState({cardDataList:origionalCardDataList})\n    \n    // this.setState({})\n  }\n  \n  handleOnACardKeyPress = () => {\n\n  }\n\n  render() {\n    return ([<CardContainer \n    getCardLocationList={this.state.cardLocationList} \n    getBCardOuterHeight={this.state.bCardOuterHeight} \n    cardListData={this.state.cardDataList} \n    changeCardListData={this.cardListDataChangeHandler} \n    refHandler={this.setContainerRef} \n    screenType={this.state.screenType}></CardContainer>\n    ,<div style={{height: '50px',width: '100%',position:' fixed',top: '0px',backgroundColor: 'cadetblue'}}>\n      <form style={{position:'fixed', zIndex: '100'}}>\n        <button onclick={this.handleOnClick()} id=\"button\">Go!</button>\n        A-Card: <input type=\"text\" name=\"onepage\" onKeyPress={this.handleOnACardKeyPress()}/>\n        B-Card: <input type=\"text\" name=\"subpage\" onKeyPress={this.handleOnACardKeyPress()}/>\n      </form>\n      </div>\n    ])\n  }\n\n}\n\nexport default CardApp;"]},"metadata":{},"sourceType":"module"}