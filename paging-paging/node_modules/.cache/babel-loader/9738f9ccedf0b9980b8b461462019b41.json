{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/Caculator.jsx\";\nimport React, { Component } from 'react';\nimport CaculateBtn from './CaculateBtn';\nimport CaculatorMonitor from './CaculatorMonitor';\n\nvar Caculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Caculator, _Component);\n\n  function Caculator(props) {\n    var _this;\n\n    _classCallCheck(this, Caculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Caculator).call(this, props));\n\n    _this.passKeyInParent = function (value) {\n      _this.handleButtonOnClick();\n    };\n\n    _this.state = {\n      number1: 0,\n      number2: 0,\n      displayValue: 0,\n      operator: 0\n    };\n    return _this;\n  }\n\n  _createClass(Caculator, [{\n    key: \"render\",\n    // 我自己的方法\n    // passKeyInParent = (value) => {\n    //   this.handleCaculating(value)\n    // }\n    // handleCaculating = (value) => {\n    //   switch(value) {\n    //     case '+':\n    //       this.setState({operator:value})\n    //       this.setState({number2:this.state.number1})\n    //       this.showOnMonitor(value)\n    //       break\n    //     case '-':\n    //       this.setState({operator:value})\n    //       this.setState({number2:this.state.number1})\n    //       this.showOnMonitor(value)\n    //       break\n    //     case 'X':\n    //       this.setState({operator:value})\n    //       this.setState({number2:this.state.number1})\n    //       this.showOnMonitor(value)\n    //       break\n    //     case '%':\n    //       this.setState({operator:value})\n    //       this.setState({number2:this.state.number1})\n    //       this.showOnMonitor(value)\n    //       break\n    //     case 'C':\n    //       this.setState({\n    //         number1:0,\n    //         number2:0,\n    //         displayValue: 0,\n    //         operator:''\n    //       })\n    //       this.showOnMonitor(0)\n    //       break\n    //     case '=':\n    //       let result = this.caculate(this.state.number1,this.state.number2, this.state.operator)\n    //       this.setState({\n    //         displayValue:result\n    //       })\n    //       this.showOnMonitor(result)\n    //       break\n    //     default:\n    //       this.setState({number1:value})\n    //       console.log(this.state.number1)\n    //       this.showOnMonitor(value)\n    //   }\n    //   console.log(this.state)\n    // }\n    // showOnMonitor = (value) =>  this.refs.child.showKeyOnMonitor(value)\n    // caculate = (number1,number2,operator) => {\n    //   let result\n    //   switch(operator) {\n    //     case '+':\n    //       result = (parseInt(number1) + parseInt(number2))\n    //       return result\n    //     case '-':\n    //       result = (parseInt(number1) - parseInt(number2))\n    //       return result\n    //     case 'X':\n    //       result = (number1 * number2)\n    //       return result\n    //     case '%':\n    //       result = (number1 / number2)\n    //       return result\n    //     default:\n    //       break\n    //   }\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Caculator:\"), React.createElement(CaculatorMonitor, {\n        ref: \"child\",\n        key: \"caculatorMonitor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(CaculateBtn, {\n        parentMethod: function parentMethod(value) {\n          return _this2.passKeyInParent(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Caculator;\n}(Component);\n\nexport default Caculator;","map":{"version":3,"sources":["/Users/umas/my-app/src/Caculator.jsx"],"names":["React","Component","CaculateBtn","CaculatorMonitor","Caculator","props","passKeyInParent","value","handleButtonOnClick","state","number1","number2","displayValue","operator"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;IAIMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAUjBC,eAViB,GAUC,UAACC,KAAD,EAAW;AAC3B,YAAKC,mBAAL;AACD,KAZgB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,CADG;AAEXC,MAAAA,OAAO,EAAC,CAFG;AAGXC,MAAAA,YAAY,EAAE,CAHH;AAIXC,MAAAA,QAAQ,EAAC;AAJE,KAAb;AAFiB;AAQlB;;;;AAMC;AAEF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAC,OAAtB;AAA8B,QAAA,GAAG,EAAC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,WAAD;AAAa,QAAA,YAAY,EAAE,sBAACN,KAAD;AAAA,iBAAW,MAAI,CAACD,eAAL,CAAqBC,KAArB,CAAX;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAjGqBN,S;;AAoGxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport CaculateBtn from './CaculateBtn'\nimport CaculatorMonitor from './CaculatorMonitor'\n\n\n\nclass Caculator extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      number1:0,\n      number2:0,\n      displayValue: 0,\n      operator:0\n    }\n  }\n\n    passKeyInParent = (value) => {\n      this.handleButtonOnClick()\n    }\n\n    // 我自己的方法\n\n  // passKeyInParent = (value) => {\n  //   this.handleCaculating(value)\n  // }\n\n  // handleCaculating = (value) => {\n  //   switch(value) {\n  //     case '+':\n  //       this.setState({operator:value})\n  //       this.setState({number2:this.state.number1})\n  //       this.showOnMonitor(value)\n  //       break\n  //     case '-':\n  //       this.setState({operator:value})\n  //       this.setState({number2:this.state.number1})\n  //       this.showOnMonitor(value)\n  //       break\n  //     case 'X':\n  //       this.setState({operator:value})\n  //       this.setState({number2:this.state.number1})\n  //       this.showOnMonitor(value)\n  //       break\n  //     case '%':\n  //       this.setState({operator:value})\n  //       this.setState({number2:this.state.number1})\n  //       this.showOnMonitor(value)\n  //       break\n  //     case 'C':\n  //       this.setState({\n  //         number1:0,\n  //         number2:0,\n  //         displayValue: 0,\n  //         operator:''\n  //       })\n  //       this.showOnMonitor(0)\n  //       break\n  //     case '=':\n  //       let result = this.caculate(this.state.number1,this.state.number2, this.state.operator)\n  //       this.setState({\n  //         displayValue:result\n  //       })\n  //       this.showOnMonitor(result)\n  //       break\n  //     default:\n  //       this.setState({number1:value})\n  //       console.log(this.state.number1)\n  //       this.showOnMonitor(value)\n  //   }\n  //   console.log(this.state)\n  // }\n\n  // showOnMonitor = (value) =>  this.refs.child.showKeyOnMonitor(value)\n  \n  // caculate = (number1,number2,operator) => {\n  //   let result\n  //   switch(operator) {\n  //     case '+':\n  //       result = (parseInt(number1) + parseInt(number2))\n  //       return result\n  //     case '-':\n  //       result = (parseInt(number1) - parseInt(number2))\n  //       return result\n  //     case 'X':\n  //       result = (number1 * number2)\n  //       return result\n  //     case '%':\n  //       result = (number1 / number2)\n  //       return result\n  //     default:\n  //       break\n  //   }\n  // }\n\n  render() {\n    return ( \n      <div>\n        <li>Caculator:</li>\n        <CaculatorMonitor ref=\"child\" key=\"caculatorMonitor\"></CaculatorMonitor>\n        <CaculateBtn parentMethod={(value) => this.passKeyInParent(value)}></CaculateBtn>\n      </div> \n      )\n  }\n}\n\nexport default Caculator;"]},"metadata":{},"sourceType":"module"}