{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardApp.jsx\";\nimport React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport createRawCardDataList from './CreateRawCardDataList';\nimport convertToMobileCardDataList from './ConvertToMobileCardDataList';\nimport createCardLocationList from './CreateCardLocationList';\nvar appWidth;\n\nvar CardApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardApp, _Component);\n\n  function CardApp(props) {\n    var _this;\n\n    _classCallCheck(this, CardApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardApp).call(this, props));\n\n    _this.componentWillMount = function () {\n      window.addEventListener(\"resize\", _this.updateWidth);\n    };\n\n    _this.componentDidMount = function () {\n      _this.updateWidth();\n    };\n\n    _this.updateWidth = function () {\n      appWidth = document.getElementById('card-app').clientWidth;\n\n      _this.setState({\n        containerWidth: appWidth,\n        screenType: _this.getScreenType()\n      }, function () {\n        _this.createCardList(resetDataListAndLocation);\n      });\n    };\n\n    _this.createCardList = function (callBackFunc) {\n      console.log(_this.state.screenType);\n\n      switch (_this.state.screenType) {\n        case 'mobile phone':\n          _this.adaptMobileScreen(callBackFunc);\n\n          console.log('adaptMobileScreen');\n          break;\n\n        case 'tablet':\n        case 'laptop':\n        case 'PC screens and bigger':\n          _this.adaptLaptopScreen(callBackFunc);\n\n          console.log('adaptLaptopScreen');\n          break;\n\n        default:\n          throw new Error('Scree Type Error');\n      }\n    };\n\n    _this.adaptMobileScreen = function (callBackFunc) {\n      var newDataList = convertToMobileCardDataList(createRawCardDataList(_this.state.bCardOuterHeight));\n      console.log('this.setState({cardDataList');\n\n      _this.setState({\n        cardDataList: newDataList\n      }, _this.setCardLocationList(newDataList, callBackFunc));\n    };\n\n    _this.adaptLaptopScreen = function (callBackFunc) {\n      var newDataList = createRawCardDataList(_this.state.bCardOuterHeight);\n\n      _this.setState({\n        cardDataList: newDataList\n      }, _this.setCardLocationList(newDataList, callBackFunc));\n    };\n\n    _this.setCardLocationList = function (newDataList) {\n      var callBackFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      _this.setState({\n        cardLocationList: createCardLocationList(newDataList)\n      }, function () {\n        console.log(_this.state.cardDataList);\n        console.log(_this.state.cardLocationList);\n        console.log(callBackFunc);\n        callBackFunc();\n      });\n    };\n\n    _this.getScreenType = function () {\n      var width = _this.state.containerWidth;\n\n      if (width <= 480) {\n        console.log('mobile phone');\n        return 'mobile phone';\n      } else if (width <= 1024) {\n        console.log('tablet');\n        return 'tablet';\n      } else if (width <= 1600) {\n        console.log('laptop');\n        return 'laptop';\n      } else {\n        console.log('PC screens and bigger');\n        return 'PC screens and bigger';\n      }\n    };\n\n    _this.setContainerRef = function (element) {\n      _this.containerElement = element;\n    };\n\n    _this.rawMoveBCard = function (ACardIndex, distance) {\n      var origionalCardDataList = _this.state.cardDataList;\n\n      var origionalTransformY = _this.getOrigionalTransformY(ACardIndex);\n\n      origionalCardDataList[ACardIndex].BCardContainerAttr = {\n        style: {\n          transform: 'translate3d(0px,' + (origionalTransformY + _this.state.bCardOuterHeight * distance) + 'vh,0px)'\n        }\n      };\n\n      _this.setState({\n        cardDataList: origionalCardDataList\n      });\n    };\n\n    _this.moveBCardToStartPoint = function (ACardIndex) {\n      var origionalCardDataList = _this.state.cardDataList;\n      origionalCardDataList[ACardIndex].BCardContainerAttr = {\n        style: {\n          transform: 'translate3d(0px,' + 0 + 'vh,0px)'\n        }\n      };\n\n      _this.setState({\n        cardDataList: origionalCardDataList\n      });\n    };\n\n    _this.setLocationToStartPoint = function () {\n      _this.setState({\n        currentLocation: [0, 0, 0]\n      });\n\n      console.log(_this.containerElement);\n    };\n\n    _this.setCardActiveStatusToUndefined = function () {\n      _this.setState({\n        cardActiveStatus: undefined\n      }, function () {\n        console.log(_this.state.cardActiveStatus);\n      });\n    };\n\n    _this.getOrigionalTransformY = function (ACardIndex) {\n      var origionaltransform;\n      _this.state.cardDataList[ACardIndex].BCardContainerAttr.style === undefined ? origionaltransform = 'translate3d(0px,0vh,0px)' : origionaltransform = _this.state.cardDataList[ACardIndex].BCardContainerAttr.style.transform;\n      var yNumberEnd = origionaltransform.toString().lastIndexOf(',');\n      origionaltransform = origionaltransform.slice(0, yNumberEnd - 2);\n      console.log(origionaltransform + yNumberEnd);\n      var yNumberStart = origionaltransform.lastIndexOf(',');\n      console.log(origionaltransform + yNumberStart);\n      var stringOrigionalTransformY = origionaltransform.slice(yNumberStart + 1);\n      return +stringOrigionalTransformY;\n    };\n\n    _this.setCardActiveStatus = function (newCardStatus, callbackFunc) {\n      _this.setState({\n        cardActiveStatus: newCardStatus\n      }, callbackFunc);\n    };\n\n    _this.getCurrentLocation = function () {\n      return _this.state.currentLocation;\n    };\n\n    _this.setCurrentLocation = function (newLocation) {\n      _this.setState({\n        currentLocation: newLocation\n      });\n    };\n\n    _this.state = {\n      containerWidth: document.getElementById('card-app').clientWidth,\n      screenType: '',\n      cardDataList: [],\n      cardLocationList: [],\n      bCardOuterHeight: 90,\n      aCardOuterHeight: 100,\n      cardActiveStatus: undefined,\n      currentLocation: [0, 0, 0]\n    };\n    return _this;\n  }\n\n  _createClass(CardApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(CardContainer, {\n        getCardLocationList: this.state.cardLocationList,\n        getBCardOuterHeight: this.state.bCardOuterHeight,\n        getACardOuterHeight: this.state.aCardOuterHeight,\n        cardListData: this.state.cardDataList,\n        rawMoveBCard: this.rawMoveBCard,\n        refHandler: this.setContainerRef,\n        screenType: this.state.screenType,\n        setCardActiveStatus: this.setCardActiveStatus,\n        getCardActiveStatus: this.state.cardActiveStatus,\n        getCurrentLocationFromParent: this.getCurrentLocation,\n        getCurrentLocationToParent: function getCurrentLocationToParent(newLocation) {\n          _this2.setCurrentLocation(newLocation);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CardApp;\n}(Component);\n\nexport default CardApp;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardApp.jsx"],"names":["React","Component","CardContainer","createRawCardDataList","convertToMobileCardDataList","createCardLocationList","appWidth","CardApp","props","componentWillMount","window","addEventListener","updateWidth","componentDidMount","document","getElementById","clientWidth","setState","containerWidth","screenType","getScreenType","createCardList","resetDataListAndLocation","callBackFunc","console","log","state","adaptMobileScreen","adaptLaptopScreen","Error","newDataList","bCardOuterHeight","cardDataList","setCardLocationList","cardLocationList","width","setContainerRef","element","containerElement","rawMoveBCard","ACardIndex","distance","origionalCardDataList","origionalTransformY","getOrigionalTransformY","BCardContainerAttr","style","transform","moveBCardToStartPoint","setLocationToStartPoint","currentLocation","setCardActiveStatusToUndefined","cardActiveStatus","undefined","origionaltransform","yNumberEnd","toString","lastIndexOf","slice","yNumberStart","stringOrigionalTransformY","setCardActiveStatus","newCardStatus","callbackFunc","getCurrentLocation","setCurrentLocation","newLocation","aCardOuterHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport createRawCardDataList from './CreateRawCardDataList';\nimport convertToMobileCardDataList from './ConvertToMobileCardDataList'\nimport createCardLocationList from './CreateCardLocationList'\n\nlet appWidth\n\nclass CardApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      containerWidth:document.getElementById('card-app').clientWidth,\n      screenType:'',\n      cardDataList:[],\n      cardLocationList:[],\n      bCardOuterHeight:90,\n      aCardOuterHeight:100,\n      cardActiveStatus: undefined,\n      currentLocation:[0,0,0]\n    }    \n  }\n\n  componentWillMount = () => {\n    window.addEventListener(\"resize\", this.updateWidth)\n  }  \n\n  componentDidMount = () => {\n    this.updateWidth()\n  }\n\n  updateWidth = () => {\n    appWidth = document.getElementById('card-app').clientWidth\n    this.setState({containerWidth:appWidth,screenType:this.getScreenType()},()=>{   \n      this.createCardList(resetDataListAndLocation)\n    })\n    \n  }\n\n  createCardList = (callBackFunc) => {\n    console.log(this.state.screenType)\n    switch (this.state.screenType) {\n      case 'mobile phone':\n        this.adaptMobileScreen(callBackFunc)\n        console.log('adaptMobileScreen')  \n        break;\n      case 'tablet':\n      case 'laptop':\n      case 'PC screens and bigger':\n        this.adaptLaptopScreen(callBackFunc)\n        console.log('adaptLaptopScreen')        \n        break;\n      default:\n        throw new Error('Scree Type Error')\n    }   \n  }\n\n  adaptMobileScreen = (callBackFunc) => {\n    let newDataList = convertToMobileCardDataList(createRawCardDataList(this.state.bCardOuterHeight))\n    console.log('this.setState({cardDataList')    \n    this.setState({cardDataList:newDataList},this.setCardLocationList(newDataList,callBackFunc))    \n  }\n  \n\n  adaptLaptopScreen = (callBackFunc) => {\n    let newDataList = createRawCardDataList(this.state.bCardOuterHeight)\n    this.setState({cardDataList:newDataList},this.setCardLocationList(newDataList,callBackFunc))\n  }\n\n  setCardLocationList = (newDataList,callBackFunc = () =>{}) => {\n    this.setState({cardLocationList:createCardLocationList(newDataList)},()=>{\n      console.log(this.state.cardDataList)\n      console.log(this.state.cardLocationList)\n      console.log(callBackFunc)      \n      callBackFunc()\n    })\n  }\n\n  getScreenType = () => {\n    let width = this.state.containerWidth\n    if (width <= 480) {\n      console.log('mobile phone')\n      return 'mobile phone'\n    } else if (width <= 1024) {\n      console.log('tablet')\n      return 'tablet'\n    } else if (width <=1600) {\n      console.log('laptop')\n      return 'laptop'\n    } else {\n      console.log('PC screens and bigger')\n      return 'PC screens and bigger'\n    }\n  }\n\n  setContainerRef = (element) => {\n    this.containerElement = element\n  }\n\n  rawMoveBCard = (ACardIndex,distance) => {\n    let origionalCardDataList = this.state.cardDataList\n    let origionalTransformY = this.getOrigionalTransformY(ACardIndex)\n    origionalCardDataList[ACardIndex].BCardContainerAttr = {style:{transform:'translate3d(0px,' + (origionalTransformY + (this.state.bCardOuterHeight * distance)) +'vh,0px)'}}\n    this.setState({cardDataList:origionalCardDataList})\n  }\n\n  moveBCardToStartPoint = (ACardIndex) => {\n    let origionalCardDataList = this.state.cardDataList\n    origionalCardDataList[ACardIndex].BCardContainerAttr = {style:{transform:'translate3d(0px,' + 0 +'vh,0px)'}}\n    this.setState({cardDataList:origionalCardDataList})\n  }\n\n  setLocationToStartPoint = () => {\n    this.setState({currentLocation:[0,0,0]})\n    console.log(this.containerElement)    \n  }\n\n  setCardActiveStatusToUndefined = () => {\n    this.setState({cardActiveStatus:undefined},()=>{\n      console.log(this.state.cardActiveStatus)  \n    })\n      \n  }\n\n  getOrigionalTransformY = (ACardIndex) => {\n    let origionaltransform \n    (this.state.cardDataList[ACardIndex].BCardContainerAttr.style === undefined)? origionaltransform = 'translate3d(0px,0vh,0px)' : origionaltransform = this.state.cardDataList[ACardIndex].BCardContainerAttr.style.transform\n    let yNumberEnd = origionaltransform.toString().lastIndexOf(',')\n    origionaltransform = origionaltransform.slice(0,yNumberEnd-2)\n    console.log(origionaltransform + yNumberEnd);\n    let yNumberStart = origionaltransform.lastIndexOf(',')\n    console.log(origionaltransform + yNumberStart);\n    let stringOrigionalTransformY = origionaltransform.slice(yNumberStart +1)\n    return +stringOrigionalTransformY\n  }\n\n  setCardActiveStatus = (newCardStatus,callbackFunc) => {\n    this.setState({cardActiveStatus:newCardStatus},callbackFunc)\n  }\n\n  getCurrentLocation = () => {\n    return this.state.currentLocation\n  }\n\n  setCurrentLocation = (newLocation) => {\n    this.setState({currentLocation:newLocation})\n  }\n\n  render() {\n    return (<CardContainer \n    getCardLocationList={this.state.cardLocationList} \n    getBCardOuterHeight={this.state.bCardOuterHeight} \n    getACardOuterHeight={this.state.aCardOuterHeight}\n    cardListData={this.state.cardDataList} \n    rawMoveBCard={this.rawMoveBCard} \n    refHandler={this.setContainerRef} \n    screenType={this.state.screenType}\n    setCardActiveStatus={this.setCardActiveStatus}\n    getCardActiveStatus={this.state.cardActiveStatus}\n    getCurrentLocationFromParent={this.getCurrentLocation}\n    getCurrentLocationToParent={(newLocation)=>{this.setCurrentLocation(newLocation)}}></CardContainer>)\n  }\n\n}\n\nexport default CardApp;"]},"metadata":{},"sourceType":"module"}