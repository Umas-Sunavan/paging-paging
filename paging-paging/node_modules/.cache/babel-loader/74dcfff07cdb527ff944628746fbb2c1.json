{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/TextApp.jsx\";\nimport React, { Component } from 'react';\nimport TextShow from './TextShow';\nimport TextInput from './TextInput';\n\nvar TextApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextApp, _Component);\n\n  function TextApp(props) {\n    var _this;\n\n    _classCallCheck(this, TextApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextApp).call(this, props));\n\n    _this.renderTextInParent = function () {\n      console.log('hahaha');\n      return _this.text;\n    };\n\n    _this.clickInput = function () {\n      return console.log('clicked');\n    };\n\n    _this.text = function () {\n      return 'text111';\n    };\n\n    _this.placeHolder = function (state) {\n      return _this.state.placeHolderText + state;\n    };\n\n    _this.state = {\n      text: 'hahaha',\n      placeHolderText: '打字吧！'\n    };\n    return _this;\n  }\n\n  _createClass(TextApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [React.createElement(TextShow, {\n        text: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(TextInput, {\n        onClick: function onClick() {\n          return _this2.clickInput;\n        },\n        placeHolder: this.placeHolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })];\n    }\n  }]);\n\n  return TextApp;\n}(Component);\n\nexport default TextApp; // 在制定子元件的props時（text={}），可使用函式表達式(fun = (a) => a)，代表提取一個常數，所以不必加括號\n// <TextShow text={this.state.text}></TextShow>\n// 但在寫函式表達式(fun = (a) => a)時，常數名稱不是放置傳入參數名稱的地方，等號右邊才是放入傳入參數名稱的地方\n// \n// 原則：呼叫props時使用使用函式定義式(function func() = {}}要加括號，呼叫常數時（包含函式表達式）不加括號","map":{"version":3,"sources":["/Users/umas/my-app/src/TextApp.jsx"],"names":["React","Component","TextShow","TextInput","TextApp","props","renderTextInParent","console","log","text","clickInput","placeHolder","state","placeHolderText"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAQnBC,kBARmB,GAQE,YAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAO,MAAKC,IAAZ;AACD,KAXkB;;AAAA,UAanBC,UAbmB,GAaN;AAAA,aAAMH,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,KAbM;;AAAA,UAgBnBC,IAhBmB,GAgBZ;AAAA,aAAM,SAAN;AAAA,KAhBY;;AAAA,UAkBnBE,WAlBmB,GAkBL,UAACC,KAAD;AAAA,aAAW,MAAKA,KAAL,CAAWC,eAAX,GAA6BD,KAAxC;AAAA,KAlBK;;AAEjB,UAAKA,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,QADK;AAEXI,MAAAA,eAAe,EAAE;AAFN,KAAb;AAFiB;AAMlB;;;;6BAcQ;AAAA;;AACP,aACE,CACA,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWH,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACC,UAAT;AAAA,SAApB;AAAyC,QAAA,WAAW,EAAE,KAAKC,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF;AAMD;;;;EA7BmBV,S;;AAgCtB,eAAeG,OAAf,C,CAGA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport TextShow from './TextShow'\nimport TextInput from './TextInput'\n\nclass TextApp extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: 'hahaha',\n      placeHolderText: '打字吧！'\n    }\n  }\n\n  renderTextInParent = () => {\n    console.log('hahaha')\n    return this.text\n  }\n\n  clickInput = () => console.log('clicked');\n  \n\n  text = () => 'text111'\n\n  placeHolder = (state) => this.state.placeHolderText + state\n\n  render() {\n    return (\n      [\n      <TextShow text={this.state.text}></TextShow>,\n      <TextInput onClick={()=>this.clickInput} placeHolder={this.placeHolder}></TextInput>\n      ]\n    )\n  }\n}\n\nexport default TextApp;\n\n\n// 在制定子元件的props時（text={}），可使用函式表達式(fun = (a) => a)，代表提取一個常數，所以不必加括號\n// <TextShow text={this.state.text}></TextShow>\n// 但在寫函式表達式(fun = (a) => a)時，常數名稱不是放置傳入參數名稱的地方，等號右邊才是放入傳入參數名稱的地方\n// \n// 原則：呼叫props時使用使用函式定義式(function func() = {}}要加括號，呼叫常數時（包含函式表達式）不加括號"]},"metadata":{},"sourceType":"module"}