{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardContainer.jsx\";\nimport React, { Component } from 'react';\nimport ACard from './ACard';\nimport BCard from './BCard';\nimport './CardContainer.css';\nimport CreateAndGetCardList from './CreateAndGetCardList';\nvar lastSrollTime = 0;\nvar currentDeltaY = undefined; // isScrollDirestionUp 0 is no scroll, 1 is scroll up, -1 is scroll down\n\nvar isScrollDirestionUp = 0;\n\nvar CardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardContainer, _Component);\n\n  function CardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardContainer).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.preventScroll();\n\n      var list = CreateAndGetCardList();\n      console.log(list);\n\n      _this.setState({\n        cardListData: list\n      });\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.componentWillUnmount = function () {};\n\n    _this.preventScroll = function () {\n      var containerClass = _assertThisInitialized(_assertThisInitialized(_this));\n\n      window.addEventListener('wheel', function (event) {\n        event.preventDefault();\n        containerClass.stablizeScroll(event);\n      });\n    };\n\n    _this.stablizeScroll = function (event) {\n      var timeNow = new Date().getTime();\n      var enableScrolling = Boolean(timeNow - lastSrollTime < _this.state.quietPeriod + _this.state.animationTime);\n\n      if (!enableScrolling) {\n        currentDeltaY = event.deltaY;\n        lastSrollTime = timeNow;\n\n        _this.onStableScroll();\n      }\n    };\n\n    _this.onStableScroll = function () {\n      isScrollDirestionUp = _this.getIsDirectionUp();\n\n      _this.moveNextLocation();\n\n      _this.rawMove(isScrollDirestionUp);\n    };\n\n    _this.getIsDirectionUp = function () {\n      return currentDeltaY !== 0 ? currentDeltaY < 0 ? -1 : 1 : 0;\n    };\n\n    _this.rawMove = function (isScrollDirestionUp) {\n      console.log(_this.containerElement);\n      _this.containerElement.scrollTop = _this.containerElement.scrollTop + 100;\n      console.log(_this.containerElement.scrollTop);\n\n      _this.setState({\n        transformY: _this.state.transformY + -100 * isScrollDirestionUp\n      });\n    };\n\n    _this.moveNextLocation = function () {};\n\n    _this.refHandler = function (element) {\n      console.log(element);\n      _this.containerElement = element;\n\n      _this.props.refHandler();\n    };\n\n    _this.state = {\n      transformY: 0,\n      animationTime: 1200,\n      quietPeriod: 0,\n      cardListData: []\n    };\n    console.log(_this.props.screenType);\n    return _this;\n  }\n\n  _createClass(CardContainer, [{\n    key: \"render\",\n    value: function render() {\n      console.log('rerender!');\n      var style = {\n        transform: \"translate3d(0px,\" + this.state.transformY + \"vh,0px)\"\n      };\n      return React.createElement(\"div\", {\n        id: \"card-container\",\n        style: style,\n        ref: this.refHandler,\n        getScreenType: this.p,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        value: \"scroll\",\n        onClick: this.rawMove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), this.state.cardListData.map(function (aCardItem, aCardIndex, listArray) {\n        return React.createElement(ACard, {\n          key: aCardIndex,\n          value: aCardItem.ACardChild,\n          style: aCardItem.ACardAttr.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CardContainer;\n}(Component);\n\nexport default CardContainer;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardContainer.jsx"],"names":["React","Component","ACard","BCard","CreateAndGetCardList","lastSrollTime","currentDeltaY","undefined","isScrollDirestionUp","CardContainer","props","componentWillMount","preventScroll","list","console","log","setState","cardListData","componentDidMount","componentWillUnmount","containerClass","window","addEventListener","event","preventDefault","stablizeScroll","timeNow","Date","getTime","enableScrolling","Boolean","state","quietPeriod","animationTime","deltaY","onStableScroll","getIsDirectionUp","moveNextLocation","rawMove","containerElement","scrollTop","transformY","refHandler","element","screenType","style","transform","p","map","aCardItem","aCardIndex","listArray","ACardChild","ACardAttr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ACard from './ACard'\nimport BCard from './BCard'\nimport './CardContainer.css'\nimport CreateAndGetCardList from './CreateAndGetCardList'\n\nlet lastSrollTime = 0\nlet currentDeltaY = undefined\n// isScrollDirestionUp 0 is no scroll, 1 is scroll up, -1 is scroll down\nlet isScrollDirestionUp = 0\n\nclass CardContainer extends Component {\n\n  componentWillMount = () => {\n    this.preventScroll()\n    let list = CreateAndGetCardList()\n    console.log(list);\n    this.setState({cardListData:list})\n  }\n\n  componentDidMount = () => {\n  }\n\n  componentWillUnmount = () => {\n  }\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      transformY:0,\n      animationTime:1200,\n      quietPeriod:0,\n      cardListData:[]\n    }\n    console.log(this.props.screenType);\n  }\n\n  preventScroll = () => {\n    let containerClass = this\n    window.addEventListener('wheel',function(event) {\n      event.preventDefault()\n      containerClass.stablizeScroll(event)\n    })\n  }\n\n  stablizeScroll = (event) => {\n    let timeNow = new Date().getTime();\n    let enableScrolling = Boolean(timeNow - lastSrollTime < (this.state.quietPeriod + this.state.animationTime));\n    if(!enableScrolling) {\n      currentDeltaY = event.deltaY\n      lastSrollTime = timeNow\n      this.onStableScroll()\n    }\n  }\n\n  onStableScroll = () => {\n    isScrollDirestionUp = this.getIsDirectionUp()\n    this.moveNextLocation()\n    this.rawMove(isScrollDirestionUp)\n  } \n\n  getIsDirectionUp = () => {\n    return (currentDeltaY !== 0)? ( (currentDeltaY < 0)? -1 : 1 ) : 0\n  }\n\n  rawMove = (isScrollDirestionUp) => {\n    console.log(this.containerElement)\n    this.containerElement.scrollTop = this.containerElement.scrollTop+ 100\n    console.log(this.containerElement.scrollTop);\n    this.setState({transformY: this.state.transformY + (-100 * isScrollDirestionUp)})\n  }\n\n  moveNextLocation = () => {\n\n  }\n\n  refHandler = (element) => {\n    console.log(element);\n    this.containerElement = element\n    this.props.refHandler()\n  }\n\n  render() {\n    console.log('rerender!');\n    let style = {transform:\"translate3d(0px,\" + this.state.transformY + \"vh,0px)\"} \n    return (\n    <div id=\"card-container\" style={style} ref={this.refHandler} getScreenType={this.p}>\n      <button value=\"scroll\" onClick={this.rawMove}></button>\n      {\n        this.state.cardListData.map((aCardItem,aCardIndex,listArray)=>{\n          return <ACard key={aCardIndex} value={aCardItem.ACardChild} style={aCardItem.ACardAttr.style}></ACard>\n        })\n      }\n    </div>\n    \n    )\n  }\n\n}\n\nexport default CardContainer;"]},"metadata":{},"sourceType":"module"}