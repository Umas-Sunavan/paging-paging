{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardApp.jsx\";\nimport React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport './CardApp.css';\nvar appWidth;\n\nvar CardApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardApp, _Component);\n\n  function CardApp(props) {\n    var _this;\n\n    _classCallCheck(this, CardApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardApp).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.preventScroll();\n\n      window.addEventListener(\"resize\", _this.updateWidth);\n    };\n\n    _this.componentDidMount = function () {\n      _this.updateWidth();\n    };\n\n    _this.updateWidth = function () {\n      appWidth = document.getElementById('card-app').clientWidth;\n\n      _this.setState({\n        containerWidth: appWidth,\n        screenType: _this.getScreenType()\n      });\n\n      console.log(_this.state.containerWidth);\n    };\n\n    _this.preventScroll = function () {\n      window.addEventListener('wheel', function (event) {\n        console.log(event.deltaY);\n        event.preventDefault();\n      });\n    };\n\n    _this.getScreenType = function () {\n      var width = _this.state.containerWidth;\n\n      if (width <= 480) {\n        _this.setState({\n          screenType: 'mobile phone'\n        });\n\n        console.log('mobile phone');\n      } else if (width <= 1024) {\n        _this.setState({\n          screenType: 'v'\n        });\n\n        console.log('tablet');\n      } else if (width <= 1600) {\n        console.log('laptop');\n      } else {\n        console.log('PC screens and bigger');\n        return \"screenType:'PC screens and bigger\";\n      }\n    };\n\n    _this.setContainerRef = function (element) {\n      _this.containerElement = element;\n    };\n\n    _this.state = {\n      containerWidth: document.getElementById('card-app').clientWidth,\n      screenType: ''\n    };\n    return _this;\n  }\n\n  _createClass(CardApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CardContainer, {\n        refHandler: this.setContainerRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CardApp;\n}(Component);\n\nexport default CardApp;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardApp.jsx"],"names":["React","Component","CardContainer","appWidth","CardApp","props","componentWillMount","preventScroll","window","addEventListener","updateWidth","componentDidMount","document","getElementById","clientWidth","setState","containerWidth","screenType","getScreenType","console","log","state","event","deltaY","preventDefault","width","setContainerRef","element","containerElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP;AAEA,IAAIC,QAAJ;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAQnBC,kBARmB,GAQE,YAAM;AACzB,YAAKC,aAAL;;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAKC,WAAvC;AACD,KAXkB;;AAAA,UAanBC,iBAbmB,GAaC,YAAM;AACxB,YAAKD,WAAL;AACD,KAfkB;;AAAA,UAiBnBA,WAjBmB,GAiBL,YAAM;AAClBP,MAAAA,QAAQ,GAAGS,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,WAA/C;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAACb,QAAhB;AAAyBc,QAAAA,UAAU,EAAC,MAAKC,aAAL;AAApC,OAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWL,cAAvB;AACD,KArBkB;;AAAA,UAuBnBT,aAvBmB,GAuBH,YAAM;AACpBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAgC,UAASa,KAAT,EAAgB;AAC9CH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAlB;AACAD,QAAAA,KAAK,CAACE,cAAN;AACD,OAHD;AAID,KA5BkB;;AAAA,UA8BnBN,aA9BmB,GA8BH,YAAM;AACpB,UAAIO,KAAK,GAAG,MAAKJ,KAAL,CAAWL,cAAvB;;AACA,UAAIS,KAAK,IAAI,GAAb,EAAkB;AAChB,cAAKV,QAAL,CAAc;AAACE,UAAAA,UAAU,EAAC;AAAZ,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,OAHD,MAGO,IAAIK,KAAK,IAAI,IAAb,EAAmB;AACxB,cAAKV,QAAL,CAAc;AAACE,UAAAA,UAAU,EAAC;AAAZ,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OAHM,MAGA,IAAIK,KAAK,IAAG,IAAZ,EAAkB;AAEvBN,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OAHM,MAGA;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,eAAO,mCAAP;AACD;AACF,KA7CkB;;AAAA,UA+CnBM,eA/CmB,GA+CD,UAACC,OAAD,EAAa;AAC7B,YAAKC,gBAAL,GAAwBD,OAAxB;AACD,KAjDkB;;AAEjB,UAAKN,KAAL,GAAa;AACXL,MAAAA,cAAc,EAACJ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,WADxC;AAEXG,MAAAA,UAAU,EAAC;AAFA,KAAb;AAFiB;AAMlB;;;;6BA8CQ;AACP,aAAO,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAE,KAAKS,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAvDmBzB,S;;AA2DtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport './CardApp.css'\n\nlet appWidth\n\nclass CardApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      containerWidth:document.getElementById('card-app').clientWidth,\n      screenType:''\n    }    \n  }\n\n  componentWillMount = () => {\n    this.preventScroll()\n    window.addEventListener(\"resize\", this.updateWidth)\n  }  \n\n  componentDidMount = () => {\n    this.updateWidth()\n  }\n\n  updateWidth = () => {\n    appWidth = document.getElementById('card-app').clientWidth\n    this.setState({containerWidth:appWidth,screenType:this.getScreenType()})\n    console.log(this.state.containerWidth)\n  }\n\n  preventScroll = () => {\n    window.addEventListener('wheel',function(event) {\n      console.log(event.deltaY)\n      event.preventDefault();\n    })\n  }\n\n  getScreenType = () => {\n    let width = this.state.containerWidth\n    if (width <= 480) {\n      this.setState({screenType:'mobile phone'})\n      console.log('mobile phone')\n    } else if (width <= 1024) {\n      this.setState({screenType:'v'})\n      console.log('tablet')\n    } else if (width <=1600) {\n      \n      console.log('laptop')\n    } else {\n      console.log('PC screens and bigger')\n      return \"screenType:'PC screens and bigger\"\n    }\n  }\n\n  setContainerRef = (element) => {\n    this.containerElement = element\n  }\n  \n\n  render() {\n    return <CardContainer refHandler={this.setContainerRef}></CardContainer>\n  }\n\n}\n\nexport default CardApp;"]},"metadata":{},"sourceType":"module"}