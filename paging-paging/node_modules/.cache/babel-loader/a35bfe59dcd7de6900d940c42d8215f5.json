{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/CardApp.jsx\";\nimport React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport createRawCardDataList from './CreateRawCardDataList';\nimport convertToMobileCardDataList from './ConvertToMobileCardDataList';\nimport createCardLocationList from './CreateCardLocationList';\nvar appWidth;\n\nvar CardApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardApp, _Component);\n\n  function CardApp(props) {\n    var _this;\n\n    _classCallCheck(this, CardApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardApp).call(this, props));\n\n    _this.componentWillMount = function () {\n      window.addEventListener(\"resize\", _this.updateWidth);\n    };\n\n    _this.componentDidMount = function () {\n      _this.updateWidth();\n    };\n\n    _this.updateWidth = function () {\n      appWidth = document.getElementById('card-app').clientWidth;\n\n      _this.setState({\n        containerWidth: appWidth,\n        screenType: _this.getScreenType()\n      }, function () {\n        _this.createCardList(resetDataListAndLocation);\n      });\n\n      var resetDataListAndLocation = function resetDataListAndLocation() {\n        console.log(_this.state);\n\n        _this.state.cardDataList.map(function (ACardItem, ACardIndex) {\n          console.log(\"ACardIndex: \".concat(ACardIndex, \",CardDataList[ACardIndex]:\"));\n          console.log(_this.state.cardDataList[ACardIndex]);\n\n          _this.moveBCardToStartPoint(ACardIndex);\n        });\n      };\n    };\n\n    _this.createCardList = function (callBackFunc) {\n      console.log(_this.state.screenType);\n\n      switch (_this.state.screenType) {\n        case 'mobile phone':\n          _this.adaptMobileScreen(callBackFunc);\n\n          console.log('adaptMobileScreen');\n          break;\n\n        case 'tablet':\n        case 'laptop':\n        case 'PC screens and bigger':\n          _this.adaptLaptopScreen(callBackFunc);\n\n          console.log('adaptLaptopScreen');\n          break;\n\n        default:\n          throw new Error('Scree Type Error');\n      }\n    };\n\n    _this.adaptMobileScreen = function (callBackFunc) {\n      console.log('this.setState({cardDataList');\n\n      _this.setState({\n        cardDataList: convertToMobileCardDataList(createRawCardDataList(_this.state.bCardOuterHeight))\n      }, _this.setCardLocationList(callBackFunc));\n    };\n\n    _this.adaptLaptopScreen = function (callBackFunc) {\n      _this.setState({\n        cardDataList: createRawCardDataList(_this.state.bCardOuterHeight)\n      }, _this.setCardLocationList(callBackFunc));\n    };\n\n    _this.setCardLocationList = function (callBackFunc) {\n      _this.setState({\n        cardLocationList: createCardLocationList(_this.state.cardDataList)\n      }, function () {\n        console.log(_this.state.cardDataList);\n        console.log(_this.state.cardDataList);\n        callBackFunc();\n      });\n    };\n\n    _this.getScreenType = function () {\n      var width = _this.state.containerWidth;\n\n      if (width <= 480) {\n        console.log('mobile phone');\n        return 'mobile phone';\n      } else if (width <= 1024) {\n        console.log('tablet');\n        return 'tablet';\n      } else if (width <= 1600) {\n        console.log('laptop');\n        return 'laptop';\n      } else {\n        console.log('PC screens and bigger');\n        return 'PC screens and bigger';\n      }\n    };\n\n    _this.setContainerRef = function (element) {\n      _this.containerElement = element;\n    };\n\n    _this.rawMoveBCard = function (ACardIndex, distance) {\n      var origionalCardDataList = _this.state.cardDataList;\n\n      var origionalTransformY = _this.getOrigionalTransformY(ACardIndex);\n\n      origionalCardDataList[ACardIndex].BCardContainerAttr = {\n        style: {\n          transform: 'translate3d(0px,' + (origionalTransformY + _this.state.bCardOuterHeight * distance) + 'vh,0px)'\n        }\n      };\n\n      _this.setState({\n        cardDataList: origionalCardDataList\n      });\n    };\n\n    _this.moveBCardToStartPoint = function (ACardIndex) {\n      var origionalCardDataList = _this.state.cardDataList;\n      origionalCardDataList[ACardIndex].BCardContainerAttr = {\n        style: {\n          transform: 'translate3d(0px,' + 0 + 'vh,0px)'\n        }\n      };\n\n      _this.setState({\n        cardDataList: origionalCardDataList\n      });\n    };\n\n    _this.getOrigionalTransformY = function (ACardIndex) {\n      var origionaltransform;\n      _this.state.cardDataList[ACardIndex].BCardContainerAttr.style === undefined ? origionaltransform = 'translate3d(0px,0vh,0px)' : origionaltransform = _this.state.cardDataList[ACardIndex].BCardContainerAttr.style.transform;\n      var yNumberEnd = origionaltransform.toString().lastIndexOf(',');\n      origionaltransform = origionaltransform.slice(0, yNumberEnd - 2);\n      console.log(origionaltransform + yNumberEnd);\n      var yNumberStart = origionaltransform.lastIndexOf(',');\n      console.log(origionaltransform + yNumberStart);\n      var stringOrigionalTransformY = origionaltransform.slice(yNumberStart + 1);\n      return +stringOrigionalTransformY;\n    };\n\n    _this.setCardActiveStatus = function (newCardStatus, callbackFunc) {\n      _this.setState({\n        cardActiveStatus: newCardStatus\n      }, callbackFunc);\n    };\n\n    _this.state = {\n      containerWidth: document.getElementById('card-app').clientWidth,\n      screenType: '',\n      cardDataList: [],\n      cardLocationList: [],\n      bCardOuterHeight: 90,\n      aCardOuterHeight: 100,\n      cardActiveStatus: undefined\n    };\n    return _this;\n  }\n\n  _createClass(CardApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CardContainer, {\n        getCardLocationList: this.state.cardLocationList,\n        getBCardOuterHeight: this.state.bCardOuterHeight,\n        getACardOuterHeight: this.state.aCardOuterHeight,\n        cardListData: this.state.cardDataList,\n        rawMoveBCard: this.rawMoveBCard,\n        refHandler: this.setContainerRef,\n        screenType: this.state.screenType,\n        setCardActiveStatus: this.setCardActiveStatus,\n        getCardActiveStatus: this.state.cardActiveStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CardApp;\n}(Component);\n\nexport default CardApp;","map":{"version":3,"sources":["/Users/umas/my-app/src/CardApp.jsx"],"names":["React","Component","CardContainer","createRawCardDataList","convertToMobileCardDataList","createCardLocationList","appWidth","CardApp","props","componentWillMount","window","addEventListener","updateWidth","componentDidMount","document","getElementById","clientWidth","setState","containerWidth","screenType","getScreenType","createCardList","resetDataListAndLocation","console","log","state","cardDataList","map","ACardItem","ACardIndex","moveBCardToStartPoint","callBackFunc","adaptMobileScreen","adaptLaptopScreen","Error","bCardOuterHeight","setCardLocationList","cardLocationList","width","setContainerRef","element","containerElement","rawMoveBCard","distance","origionalCardDataList","origionalTransformY","getOrigionalTransformY","BCardContainerAttr","style","transform","origionaltransform","undefined","yNumberEnd","toString","lastIndexOf","slice","yNumberStart","stringOrigionalTransformY","setCardActiveStatus","newCardStatus","callbackFunc","cardActiveStatus","aCardOuterHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardContainer from './CardContainer';\nimport createRawCardDataList from './CreateRawCardDataList';\nimport convertToMobileCardDataList from './ConvertToMobileCardDataList'\nimport createCardLocationList from './CreateCardLocationList'\n\nlet appWidth\n\nclass CardApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      containerWidth:document.getElementById('card-app').clientWidth,\n      screenType:'',\n      cardDataList:[],\n      cardLocationList:[],\n      bCardOuterHeight:90,\n      aCardOuterHeight:100,\n      cardActiveStatus: undefined\n    }    \n  }\n\n  componentWillMount = () => {\n    window.addEventListener(\"resize\", this.updateWidth)\n  }  \n\n  componentDidMount = () => {\n    this.updateWidth()\n  }\n\n  updateWidth = () => {\n    appWidth = document.getElementById('card-app').clientWidth\n    this.setState({containerWidth:appWidth,screenType:this.getScreenType()},()=>{   \n      this.createCardList(resetDataListAndLocation)\n    })\n    let resetDataListAndLocation = () =>{\n      console.log(this.state)\n      this.state.cardDataList.map((ACardItem,ACardIndex)=>{\n        console.log(`ACardIndex: ${ACardIndex},CardDataList[ACardIndex]:`)\n        console.log(this.state.cardDataList[ACardIndex])                \n        this.moveBCardToStartPoint(ACardIndex)\n      })\n    }\n  }\n\n  createCardList = (callBackFunc) => {\n    console.log(this.state.screenType)\n    switch (this.state.screenType) {\n      case 'mobile phone':\n        this.adaptMobileScreen(callBackFunc)\n        console.log('adaptMobileScreen')  \n        break;\n      case 'tablet':\n      case 'laptop':\n      case 'PC screens and bigger':\n        this.adaptLaptopScreen(callBackFunc)\n        console.log('adaptLaptopScreen')        \n        break;\n      default:\n        throw new Error('Scree Type Error')\n    }   \n  }\n\n  adaptMobileScreen = (callBackFunc) => {\n    console.log('this.setState({cardDataList')    \n    this.setState({cardDataList:convertToMobileCardDataList(createRawCardDataList(this.state.bCardOuterHeight))},this.setCardLocationList(callBackFunc))    \n  }\n  \n\n  adaptLaptopScreen = (callBackFunc) => {\n    this.setState({cardDataList:createRawCardDataList(this.state.bCardOuterHeight)},this.setCardLocationList(callBackFunc))\n  }\n\n  setCardLocationList = (callBackFunc) => {\n    this.setState({cardLocationList:createCardLocationList(this.state.cardDataList)},()=>{\n      console.log(this.state.cardDataList)\n      console.log(this.state.cardDataList)\n      callBackFunc()\n    })\n  }\n\n  getScreenType = () => {\n    let width = this.state.containerWidth\n    if (width <= 480) {\n      console.log('mobile phone')\n      return 'mobile phone'\n    } else if (width <= 1024) {\n      console.log('tablet')\n      return 'tablet'\n    } else if (width <=1600) {\n      console.log('laptop')\n      return 'laptop'\n    } else {\n      console.log('PC screens and bigger')\n      return 'PC screens and bigger'\n    }\n  }\n\n  setContainerRef = (element) => {\n    this.containerElement = element\n  }\n\n  rawMoveBCard = (ACardIndex,distance) => {\n    let origionalCardDataList = this.state.cardDataList\n    let origionalTransformY = this.getOrigionalTransformY(ACardIndex)\n    origionalCardDataList[ACardIndex].BCardContainerAttr = {style:{transform:'translate3d(0px,' + (origionalTransformY + (this.state.bCardOuterHeight * distance)) +'vh,0px)'}}\n    this.setState({cardDataList:origionalCardDataList})\n  }\n\n  moveBCardToStartPoint = (ACardIndex) => {\n    let origionalCardDataList = this.state.cardDataList\n    origionalCardDataList[ACardIndex].BCardContainerAttr = {style:{transform:'translate3d(0px,' + 0 +'vh,0px)'}}\n    this.setState({cardDataList:origionalCardDataList})\n  }\n\n  getOrigionalTransformY = (ACardIndex) => {\n    let origionaltransform \n    (this.state.cardDataList[ACardIndex].BCardContainerAttr.style === undefined)? origionaltransform = 'translate3d(0px,0vh,0px)' : origionaltransform = this.state.cardDataList[ACardIndex].BCardContainerAttr.style.transform\n    let yNumberEnd = origionaltransform.toString().lastIndexOf(',')\n    origionaltransform = origionaltransform.slice(0,yNumberEnd-2)\n    console.log(origionaltransform + yNumberEnd);\n    let yNumberStart = origionaltransform.lastIndexOf(',')\n    console.log(origionaltransform + yNumberStart);\n    let stringOrigionalTransformY = origionaltransform.slice(yNumberStart +1)\n    return +stringOrigionalTransformY\n  }\n\n  setCardActiveStatus = (newCardStatus,callbackFunc) => {\n    this.setState({cardActiveStatus:newCardStatus},callbackFunc)\n  }\n\n  \n\n  render() {\n    return (<CardContainer \n    getCardLocationList={this.state.cardLocationList} \n    getBCardOuterHeight={this.state.bCardOuterHeight} \n    getACardOuterHeight={this.state.aCardOuterHeight}\n    cardListData={this.state.cardDataList} \n    rawMoveBCard={this.rawMoveBCard} \n    refHandler={this.setContainerRef} \n    screenType={this.state.screenType}\n    setCardActiveStatus={this.setCardActiveStatus}\n    getCardActiveStatus={this.state.cardActiveStatus}></CardContainer>)\n  }\n\n}\n\nexport default CardApp;"]},"metadata":{},"sourceType":"module"}