{"ast":null,"code":"import _classCallCheck from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umas/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umas/my-app/src/ToDoListPreviewApp.jsx\";\nimport React, { Component } from 'react';\nimport ToDoListPreviewInput from './ToDoListPreviewInput';\nimport ToDoListPreviewItem from './ToDoListPreviewItem';\n\nvar ToDoListPreviewApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoListPreviewApp, _Component);\n\n  function ToDoListPreviewApp(props) {\n    var _this;\n\n    _classCallCheck(this, ToDoListPreviewApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoListPreviewApp).call(this, props));\n\n    _this.deleteListItem = function (index) {\n      _this.setState({\n        listItemArray: _this.state.listItemArray.filter(function (item) {\n          return item !== _this.state.listItemArray[index];\n        })\n      });\n\n      console.log(index);\n    };\n\n    _this.showListItem = function () {\n      return _this.state.listItemArray.map(function (value, index) {\n        return _this.state.editItemIndex === index ? React.createElement(\"input\", {\n          onKeyPress: _this.saveEditText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }) : React.createElement(ToDoListPreviewItem, {\n          itemText: value.text,\n          deleteHandler: function deleteHandler() {\n            return _this.deleteListItem(index);\n          },\n          key: index,\n          editHandler: function editHandler() {\n            return _this.editItemAction(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.onChangeAction = function (event) {\n      _this.setState({\n        inputText: event.target.value\n      });\n    };\n\n    _this.handleOnClick = function (event) {\n      _this.state.listItemArray.push({\n        text: _this.state.inputText\n      });\n\n      console.log(_this.state.listItemArray);\n\n      _this.setState({\n        inputText: ''\n      });\n\n      _this.inputElement.value = '';\n    };\n\n    _this.editItemAction = function (index) {\n      console.log('editItemAction' + index);\n\n      _this.setState({\n        editItemIndex: index\n      });\n    };\n\n    _this.state = {\n      listItemArray: [],\n      inputText: '',\n      editItemIndex: ''\n    };\n    return _this;\n  }\n\n  _createClass(ToDoListPreviewApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add\"), React.createElement(ToDoListPreviewInput, {\n        buttonRef: function buttonRef(element) {\n          return _this2.inputElement = element;\n        },\n        value: this.state.inputText,\n        onChangeHandler: this.onChangeAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), this.showListItem());\n    }\n  }]);\n\n  return ToDoListPreviewApp;\n}(Component);\n\nexport default ToDoListPreviewApp;","map":{"version":3,"sources":["/Users/umas/my-app/src/ToDoListPreviewApp.jsx"],"names":["React","Component","ToDoListPreviewInput","ToDoListPreviewItem","ToDoListPreviewApp","props","deleteListItem","index","setState","listItemArray","state","filter","item","console","log","showListItem","map","value","editItemIndex","saveEditText","text","editItemAction","onChangeAction","event","inputText","target","handleOnClick","push","inputElement","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ToDoListPreviewInput from './ToDoListPreviewInput'\nimport ToDoListPreviewItem from './ToDoListPreviewItem'\n\nclass ToDoListPreviewApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listItemArray:[],\n      inputText:'',\n      editItemIndex:''\n    }\n  }\n\n  deleteListItem = (index) => {\n    this.setState({listItemArray:this.state.listItemArray.filter((item) => item !== this.state.listItemArray[index])})\n    console.log(index)\n  }\n  \n  showListItem = () => {\n    return this.state.listItemArray.map((value,index)=>{\n      return (\n      (this.state.editItemIndex === index)\n      ?\n       <input onKeyPress={this.saveEditText}></input>\n      :\n       <ToDoListPreviewItem itemText={value.text} deleteHandler={()=>this.deleteListItem(index)} key={index} editHandler={()=>this.editItemAction(index)}></ToDoListPreviewItem>\n      )\n    })\n  }\n\n  onChangeAction = (event) => {\n    this.setState({inputText:event.target.value})\n  }\n\n  handleOnClick = (event) => {\n    this.state.listItemArray.push({text:this.state.inputText})\n    console.log(this.state.listItemArray)\n    this.setState({inputText:''})\n    this.inputElement.value = ''\n  }\n\n  editItemAction = (index) => {\n    console.log('editItemAction' + index)\n    this.setState({editItemIndex: index})\n  }\n\n  render() {\n    return (\n      <div>\n        <div></div>\n        <button onClick={this.handleOnClick}>Add</button>\n        <ToDoListPreviewInput \n        buttonRef={(element) => this.inputElement = element} \n        value={this.state.inputText} \n        onChangeHandler={this.onChangeAction}></ToDoListPreviewInput>\n        {this.showListItem()}\n      </div>\n    )\n  }\n\n}\n\nexport default ToDoListPreviewApp;"]},"metadata":{},"sourceType":"module"}