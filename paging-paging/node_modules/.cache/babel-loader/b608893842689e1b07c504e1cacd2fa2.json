{"ast":null,"code":"var _jsxFileName = \"/Users/umas/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport CardApp from './CardApp';\nvar lastScroll = 0; // document.addEventListener(\"scroll\", function (event) {\n//   console.log('checking')\n//   let thisScroll = document.documentElement.scrollTop\n//     if (thisScroll > lastScroll) {\n//       lastScroll = thisScroll\n//       // isScrollUp = false\n//       console.log('down')\n//       // return isScrollUp\n//     } else {\n//       lastScroll = thisScroll\n//       console.log('up')\n//       // isScrollUp = true\n//       // return isScrollUp\n//     }\n//     console.log('checking')\n// })\n\nfunction func(event) {\n  console.log(event);\n}\n\nvar checkScrollDirection = function checkScrollDirection() {\n  console.log('checking');\n  var lastScroll;\n  var isScrollUp;\n};\n\nReactDOM.addEventListener(\"scroll\", function (event) {\n  console.log('checking');\n  var thisScroll = document.documentElement.scrollTop;\n\n  if (thisScroll > lastScroll) {\n    lastScroll = thisScroll; // isScrollUp = false\n\n    console.log('down'); // return isScrollUp\n  } else {\n    lastScroll = thisScroll;\n    console.log('up'); // isScrollUp = true\n    // return isScrollUp\n  }\n\n  console.log('checking');\n});\nReactDOM.render(React.createElement(CardApp, {\n  onscroll: \"this.func()\",\n  id: \"card-app\",\n  ref: checkScrollDirection,\n  onScroll: checkScrollDirection(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), document.getElementById('card-app')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/umas/my-app/src/index.js"],"names":["React","ReactDOM","serviceWorker","CardApp","lastScroll","func","event","console","log","checkScrollDirection","isScrollUp","addEventListener","thisScroll","document","documentElement","scrollTop","render","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAGA,IAAIC,UAAU,GAAG,CAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAED;;AAED,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAIJ,UAAJ;AACA,MAAIM,UAAJ;AAED,CALD;;AAMAT,QAAQ,CAACU,gBAAT,CAA0B,QAA1B,EAAoC,UAAUL,KAAV,EAAiB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,MAAII,UAAU,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAA1C;;AACE,MAAIH,UAAU,GAAGR,UAAjB,EAA6B;AAC3BA,IAAAA,UAAU,GAAGQ,UAAb,CAD2B,CAE3B;;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAH2B,CAI3B;AACD,GALD,MAKO;AACLJ,IAAAA,UAAU,GAAGQ,UAAb;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAFK,CAGL;AACA;AACD;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEH,CAhBD;AAiBAP,QAAQ,CAACe,MAAT,CAAgB,oBAAC,OAAD;AAAS,EAAA,QAAQ,EAAC,aAAlB;AAAgC,EAAA,EAAE,EAAC,UAAnC;AAA8C,EAAA,GAAG,EAAEP,oBAAnD;AAAyE,EAAA,QAAQ,EAAEA,oBAAoB,EAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA8HI,QAAQ,CAACI,cAAT,CAAwB,UAAxB,CAA9H,E,CAGA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport CardApp from './CardApp';\n\n\nlet lastScroll = 0\n// document.addEventListener(\"scroll\", function (event) {\n//   console.log('checking')\n//   let thisScroll = document.documentElement.scrollTop\n//     if (thisScroll > lastScroll) {\n//       lastScroll = thisScroll\n//       // isScrollUp = false\n//       console.log('down')\n//       // return isScrollUp\n//     } else {\n//       lastScroll = thisScroll\n//       console.log('up')\n//       // isScrollUp = true\n//       // return isScrollUp\n//     }\n//     console.log('checking')\n  \n// })\n\nfunction func(event) {\n  console.log(event);\n  \n}\n\nconst checkScrollDirection = () => {\n  console.log('checking');\n  let lastScroll\n  let isScrollUp\n  \n}\nReactDOM.addEventListener(\"scroll\", function (event) {\n  console.log('checking')\n  let thisScroll = document.documentElement.scrollTop\n    if (thisScroll > lastScroll) {\n      lastScroll = thisScroll\n      // isScrollUp = false\n      console.log('down')\n      // return isScrollUp\n    } else {\n      lastScroll = thisScroll\n      console.log('up')\n      // isScrollUp = true\n      // return isScrollUp\n    }\n    console.log('checking')\n  \n})\nReactDOM.render(<CardApp onscroll=\"this.func()\" id=\"card-app\" ref={checkScrollDirection} onScroll={checkScrollDirection()}/>, document.getElementById('card-app'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}